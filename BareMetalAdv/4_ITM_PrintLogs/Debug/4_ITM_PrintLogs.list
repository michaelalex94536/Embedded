
4_ITM_PrintLogs.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001410  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000104  080015e0  080015e0  000115e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080016e4  080016e4  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080016e4  080016e4  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080016e4  080016e4  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080016e4  080016e4  000116e4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080016e8  080016e8  000116e8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080016ec  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  08001750  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  08001750  00020094  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000d15  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000464  00000000  00000000  00020da9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000150  00000000  00000000  00021210  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000108  00000000  00000000  00021360  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001b226  00000000  00000000  00021468  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000018ee  00000000  00000000  0003c68e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000906c0  00000000  00000000  0003df7c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000ce63c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c38  00000000  00000000  000ce68c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000064 	.word	0x20000064
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080015c8 	.word	0x080015c8

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000068 	.word	0x20000068
 800020c:	080015c8 	.word	0x080015c8

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <main>:

#include "stm32f4xx.h"
#include "swo.h"

int main(void)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	af00      	add	r7, sp, #0

	log_error("Initialization failed\n");
 80002b4:	4804      	ldr	r0, [pc, #16]	; (80002c8 <main+0x18>)
 80002b6:	f000 f841 	bl	800033c <log_error>
	log_info("Filter complete\n");
 80002ba:	4804      	ldr	r0, [pc, #16]	; (80002cc <main+0x1c>)
 80002bc:	f000 f854 	bl	8000368 <log_info>
	log_debug("Warning, bad argument\n");
 80002c0:	4803      	ldr	r0, [pc, #12]	; (80002d0 <main+0x20>)
 80002c2:	f000 f867 	bl	8000394 <log_debug>

	while(1)
 80002c6:	e7fe      	b.n	80002c6 <main+0x16>
 80002c8:	080015e0 	.word	0x080015e0
 80002cc:	080015f8 	.word	0x080015f8
 80002d0:	0800160c 	.word	0x0800160c

080002d4 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 80002d4:	b480      	push	{r7}
 80002d6:	b083      	sub	sp, #12
 80002d8:	af00      	add	r7, sp, #0
 80002da:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80002dc:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002e0:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 80002e4:	f003 0301 	and.w	r3, r3, #1
 80002e8:	2b00      	cmp	r3, #0
 80002ea:	d013      	beq.n	8000314 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 80002ec:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002f0:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 80002f4:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80002f8:	2b00      	cmp	r3, #0
 80002fa:	d00b      	beq.n	8000314 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 80002fc:	e000      	b.n	8000300 <ITM_SendChar+0x2c>
    {
      __NOP();
 80002fe:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 8000300:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000304:	681b      	ldr	r3, [r3, #0]
 8000306:	2b00      	cmp	r3, #0
 8000308:	d0f9      	beq.n	80002fe <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 800030a:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800030e:	687a      	ldr	r2, [r7, #4]
 8000310:	b2d2      	uxtb	r2, r2
 8000312:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 8000314:	687b      	ldr	r3, [r7, #4]
}
 8000316:	4618      	mov	r0, r3
 8000318:	370c      	adds	r7, #12
 800031a:	46bd      	mov	sp, r7
 800031c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000320:	4770      	bx	lr

08000322 <__io_putchar>:

#include "stm32f4xx.h"
#include <stdio.h>

int __io_putchar(int ch)
{
 8000322:	b580      	push	{r7, lr}
 8000324:	b082      	sub	sp, #8
 8000326:	af00      	add	r7, sp, #0
 8000328:	6078      	str	r0, [r7, #4]
	ITM_SendChar(ch);
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	4618      	mov	r0, r3
 800032e:	f7ff ffd1 	bl	80002d4 <ITM_SendChar>

	return ch;
 8000332:	687b      	ldr	r3, [r7, #4]
}
 8000334:	4618      	mov	r0, r3
 8000336:	3708      	adds	r7, #8
 8000338:	46bd      	mov	sp, r7
 800033a:	bd80      	pop	{r7, pc}

0800033c <log_error>:

void log_error(char *p)
{
 800033c:	b580      	push	{r7, lr}
 800033e:	b082      	sub	sp, #8
 8000340:	af00      	add	r7, sp, #0
 8000342:	6078      	str	r0, [r7, #4]
	printf("log error: ");
 8000344:	4806      	ldr	r0, [pc, #24]	; (8000360 <log_error+0x24>)
 8000346:	f000 f93b 	bl	80005c0 <iprintf>
	printf((char *)p);
 800034a:	6878      	ldr	r0, [r7, #4]
 800034c:	f000 f938 	bl	80005c0 <iprintf>
	printf("\r\n");
 8000350:	4804      	ldr	r0, [pc, #16]	; (8000364 <log_error+0x28>)
 8000352:	f000 f9bb 	bl	80006cc <puts>
}
 8000356:	bf00      	nop
 8000358:	3708      	adds	r7, #8
 800035a:	46bd      	mov	sp, r7
 800035c:	bd80      	pop	{r7, pc}
 800035e:	bf00      	nop
 8000360:	08001624 	.word	0x08001624
 8000364:	08001630 	.word	0x08001630

08000368 <log_info>:


void log_info(char *p)
{
 8000368:	b580      	push	{r7, lr}
 800036a:	b082      	sub	sp, #8
 800036c:	af00      	add	r7, sp, #0
 800036e:	6078      	str	r0, [r7, #4]
	printf("log info: ");
 8000370:	4806      	ldr	r0, [pc, #24]	; (800038c <log_info+0x24>)
 8000372:	f000 f925 	bl	80005c0 <iprintf>
	printf((char *)p);
 8000376:	6878      	ldr	r0, [r7, #4]
 8000378:	f000 f922 	bl	80005c0 <iprintf>
	printf("\r\n");
 800037c:	4804      	ldr	r0, [pc, #16]	; (8000390 <log_info+0x28>)
 800037e:	f000 f9a5 	bl	80006cc <puts>
}
 8000382:	bf00      	nop
 8000384:	3708      	adds	r7, #8
 8000386:	46bd      	mov	sp, r7
 8000388:	bd80      	pop	{r7, pc}
 800038a:	bf00      	nop
 800038c:	08001634 	.word	0x08001634
 8000390:	08001630 	.word	0x08001630

08000394 <log_debug>:


void log_debug(char *p)
{
 8000394:	b580      	push	{r7, lr}
 8000396:	b082      	sub	sp, #8
 8000398:	af00      	add	r7, sp, #0
 800039a:	6078      	str	r0, [r7, #4]
	printf("log debug: ");
 800039c:	4806      	ldr	r0, [pc, #24]	; (80003b8 <log_debug+0x24>)
 800039e:	f000 f90f 	bl	80005c0 <iprintf>
	printf((char *)p);
 80003a2:	6878      	ldr	r0, [r7, #4]
 80003a4:	f000 f90c 	bl	80005c0 <iprintf>
	printf("\r\n");
 80003a8:	4804      	ldr	r0, [pc, #16]	; (80003bc <log_debug+0x28>)
 80003aa:	f000 f98f 	bl	80006cc <puts>
}
 80003ae:	bf00      	nop
 80003b0:	3708      	adds	r7, #8
 80003b2:	46bd      	mov	sp, r7
 80003b4:	bd80      	pop	{r7, pc}
 80003b6:	bf00      	nop
 80003b8:	08001640 	.word	0x08001640
 80003bc:	08001630 	.word	0x08001630

080003c0 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003c0:	b580      	push	{r7, lr}
 80003c2:	b086      	sub	sp, #24
 80003c4:	af00      	add	r7, sp, #0
 80003c6:	60f8      	str	r0, [r7, #12]
 80003c8:	60b9      	str	r1, [r7, #8]
 80003ca:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003cc:	2300      	movs	r3, #0
 80003ce:	617b      	str	r3, [r7, #20]
 80003d0:	e00a      	b.n	80003e8 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80003d2:	f3af 8000 	nop.w
 80003d6:	4601      	mov	r1, r0
 80003d8:	68bb      	ldr	r3, [r7, #8]
 80003da:	1c5a      	adds	r2, r3, #1
 80003dc:	60ba      	str	r2, [r7, #8]
 80003de:	b2ca      	uxtb	r2, r1
 80003e0:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003e2:	697b      	ldr	r3, [r7, #20]
 80003e4:	3301      	adds	r3, #1
 80003e6:	617b      	str	r3, [r7, #20]
 80003e8:	697a      	ldr	r2, [r7, #20]
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	429a      	cmp	r2, r3
 80003ee:	dbf0      	blt.n	80003d2 <_read+0x12>
	}

return len;
 80003f0:	687b      	ldr	r3, [r7, #4]
}
 80003f2:	4618      	mov	r0, r3
 80003f4:	3718      	adds	r7, #24
 80003f6:	46bd      	mov	sp, r7
 80003f8:	bd80      	pop	{r7, pc}

080003fa <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80003fa:	b580      	push	{r7, lr}
 80003fc:	b086      	sub	sp, #24
 80003fe:	af00      	add	r7, sp, #0
 8000400:	60f8      	str	r0, [r7, #12]
 8000402:	60b9      	str	r1, [r7, #8]
 8000404:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000406:	2300      	movs	r3, #0
 8000408:	617b      	str	r3, [r7, #20]
 800040a:	e009      	b.n	8000420 <_write+0x26>
	{
		__io_putchar(*ptr++);
 800040c:	68bb      	ldr	r3, [r7, #8]
 800040e:	1c5a      	adds	r2, r3, #1
 8000410:	60ba      	str	r2, [r7, #8]
 8000412:	781b      	ldrb	r3, [r3, #0]
 8000414:	4618      	mov	r0, r3
 8000416:	f7ff ff84 	bl	8000322 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800041a:	697b      	ldr	r3, [r7, #20]
 800041c:	3301      	adds	r3, #1
 800041e:	617b      	str	r3, [r7, #20]
 8000420:	697a      	ldr	r2, [r7, #20]
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	429a      	cmp	r2, r3
 8000426:	dbf1      	blt.n	800040c <_write+0x12>
	}
	return len;
 8000428:	687b      	ldr	r3, [r7, #4]
}
 800042a:	4618      	mov	r0, r3
 800042c:	3718      	adds	r7, #24
 800042e:	46bd      	mov	sp, r7
 8000430:	bd80      	pop	{r7, pc}

08000432 <_close>:

int _close(int file)
{
 8000432:	b480      	push	{r7}
 8000434:	b083      	sub	sp, #12
 8000436:	af00      	add	r7, sp, #0
 8000438:	6078      	str	r0, [r7, #4]
	return -1;
 800043a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 800043e:	4618      	mov	r0, r3
 8000440:	370c      	adds	r7, #12
 8000442:	46bd      	mov	sp, r7
 8000444:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000448:	4770      	bx	lr

0800044a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800044a:	b480      	push	{r7}
 800044c:	b083      	sub	sp, #12
 800044e:	af00      	add	r7, sp, #0
 8000450:	6078      	str	r0, [r7, #4]
 8000452:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000454:	683b      	ldr	r3, [r7, #0]
 8000456:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800045a:	605a      	str	r2, [r3, #4]
	return 0;
 800045c:	2300      	movs	r3, #0
}
 800045e:	4618      	mov	r0, r3
 8000460:	370c      	adds	r7, #12
 8000462:	46bd      	mov	sp, r7
 8000464:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000468:	4770      	bx	lr

0800046a <_isatty>:

int _isatty(int file)
{
 800046a:	b480      	push	{r7}
 800046c:	b083      	sub	sp, #12
 800046e:	af00      	add	r7, sp, #0
 8000470:	6078      	str	r0, [r7, #4]
	return 1;
 8000472:	2301      	movs	r3, #1
}
 8000474:	4618      	mov	r0, r3
 8000476:	370c      	adds	r7, #12
 8000478:	46bd      	mov	sp, r7
 800047a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800047e:	4770      	bx	lr

08000480 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000480:	b480      	push	{r7}
 8000482:	b085      	sub	sp, #20
 8000484:	af00      	add	r7, sp, #0
 8000486:	60f8      	str	r0, [r7, #12]
 8000488:	60b9      	str	r1, [r7, #8]
 800048a:	607a      	str	r2, [r7, #4]
	return 0;
 800048c:	2300      	movs	r3, #0
}
 800048e:	4618      	mov	r0, r3
 8000490:	3714      	adds	r7, #20
 8000492:	46bd      	mov	sp, r7
 8000494:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000498:	4770      	bx	lr
	...

0800049c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800049c:	b580      	push	{r7, lr}
 800049e:	b086      	sub	sp, #24
 80004a0:	af00      	add	r7, sp, #0
 80004a2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004a4:	4a14      	ldr	r2, [pc, #80]	; (80004f8 <_sbrk+0x5c>)
 80004a6:	4b15      	ldr	r3, [pc, #84]	; (80004fc <_sbrk+0x60>)
 80004a8:	1ad3      	subs	r3, r2, r3
 80004aa:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004ac:	697b      	ldr	r3, [r7, #20]
 80004ae:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004b0:	4b13      	ldr	r3, [pc, #76]	; (8000500 <_sbrk+0x64>)
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	2b00      	cmp	r3, #0
 80004b6:	d102      	bne.n	80004be <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004b8:	4b11      	ldr	r3, [pc, #68]	; (8000500 <_sbrk+0x64>)
 80004ba:	4a12      	ldr	r2, [pc, #72]	; (8000504 <_sbrk+0x68>)
 80004bc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004be:	4b10      	ldr	r3, [pc, #64]	; (8000500 <_sbrk+0x64>)
 80004c0:	681a      	ldr	r2, [r3, #0]
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	4413      	add	r3, r2
 80004c6:	693a      	ldr	r2, [r7, #16]
 80004c8:	429a      	cmp	r2, r3
 80004ca:	d207      	bcs.n	80004dc <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004cc:	f000 f846 	bl	800055c <__errno>
 80004d0:	4603      	mov	r3, r0
 80004d2:	220c      	movs	r2, #12
 80004d4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004d6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80004da:	e009      	b.n	80004f0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004dc:	4b08      	ldr	r3, [pc, #32]	; (8000500 <_sbrk+0x64>)
 80004de:	681b      	ldr	r3, [r3, #0]
 80004e0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004e2:	4b07      	ldr	r3, [pc, #28]	; (8000500 <_sbrk+0x64>)
 80004e4:	681a      	ldr	r2, [r3, #0]
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	4413      	add	r3, r2
 80004ea:	4a05      	ldr	r2, [pc, #20]	; (8000500 <_sbrk+0x64>)
 80004ec:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004ee:	68fb      	ldr	r3, [r7, #12]
}
 80004f0:	4618      	mov	r0, r3
 80004f2:	3718      	adds	r7, #24
 80004f4:	46bd      	mov	sp, r7
 80004f6:	bd80      	pop	{r7, pc}
 80004f8:	20020000 	.word	0x20020000
 80004fc:	00000400 	.word	0x00000400
 8000500:	20000080 	.word	0x20000080
 8000504:	20000098 	.word	0x20000098

08000508 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000508:	480d      	ldr	r0, [pc, #52]	; (8000540 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800050a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800050c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000510:	480c      	ldr	r0, [pc, #48]	; (8000544 <LoopForever+0x6>)
  ldr r1, =_edata
 8000512:	490d      	ldr	r1, [pc, #52]	; (8000548 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000514:	4a0d      	ldr	r2, [pc, #52]	; (800054c <LoopForever+0xe>)
  movs r3, #0
 8000516:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000518:	e002      	b.n	8000520 <LoopCopyDataInit>

0800051a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800051a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800051c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800051e:	3304      	adds	r3, #4

08000520 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000520:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000522:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000524:	d3f9      	bcc.n	800051a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000526:	4a0a      	ldr	r2, [pc, #40]	; (8000550 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000528:	4c0a      	ldr	r4, [pc, #40]	; (8000554 <LoopForever+0x16>)
  movs r3, #0
 800052a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800052c:	e001      	b.n	8000532 <LoopFillZerobss>

0800052e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800052e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000530:	3204      	adds	r2, #4

08000532 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000532:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000534:	d3fb      	bcc.n	800052e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000536:	f000 f817 	bl	8000568 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800053a:	f7ff feb9 	bl	80002b0 <main>

0800053e <LoopForever>:

LoopForever:
    b LoopForever
 800053e:	e7fe      	b.n	800053e <LoopForever>
  ldr   r0, =_estack
 8000540:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000544:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000548:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 800054c:	080016ec 	.word	0x080016ec
  ldr r2, =_sbss
 8000550:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000554:	20000094 	.word	0x20000094

08000558 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000558:	e7fe      	b.n	8000558 <ADC_IRQHandler>
	...

0800055c <__errno>:
 800055c:	4b01      	ldr	r3, [pc, #4]	; (8000564 <__errno+0x8>)
 800055e:	6818      	ldr	r0, [r3, #0]
 8000560:	4770      	bx	lr
 8000562:	bf00      	nop
 8000564:	20000000 	.word	0x20000000

08000568 <__libc_init_array>:
 8000568:	b570      	push	{r4, r5, r6, lr}
 800056a:	4d0d      	ldr	r5, [pc, #52]	; (80005a0 <__libc_init_array+0x38>)
 800056c:	4c0d      	ldr	r4, [pc, #52]	; (80005a4 <__libc_init_array+0x3c>)
 800056e:	1b64      	subs	r4, r4, r5
 8000570:	10a4      	asrs	r4, r4, #2
 8000572:	2600      	movs	r6, #0
 8000574:	42a6      	cmp	r6, r4
 8000576:	d109      	bne.n	800058c <__libc_init_array+0x24>
 8000578:	4d0b      	ldr	r5, [pc, #44]	; (80005a8 <__libc_init_array+0x40>)
 800057a:	4c0c      	ldr	r4, [pc, #48]	; (80005ac <__libc_init_array+0x44>)
 800057c:	f001 f824 	bl	80015c8 <_init>
 8000580:	1b64      	subs	r4, r4, r5
 8000582:	10a4      	asrs	r4, r4, #2
 8000584:	2600      	movs	r6, #0
 8000586:	42a6      	cmp	r6, r4
 8000588:	d105      	bne.n	8000596 <__libc_init_array+0x2e>
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000590:	4798      	blx	r3
 8000592:	3601      	adds	r6, #1
 8000594:	e7ee      	b.n	8000574 <__libc_init_array+0xc>
 8000596:	f855 3b04 	ldr.w	r3, [r5], #4
 800059a:	4798      	blx	r3
 800059c:	3601      	adds	r6, #1
 800059e:	e7f2      	b.n	8000586 <__libc_init_array+0x1e>
 80005a0:	080016e4 	.word	0x080016e4
 80005a4:	080016e4 	.word	0x080016e4
 80005a8:	080016e4 	.word	0x080016e4
 80005ac:	080016e8 	.word	0x080016e8

080005b0 <memset>:
 80005b0:	4402      	add	r2, r0
 80005b2:	4603      	mov	r3, r0
 80005b4:	4293      	cmp	r3, r2
 80005b6:	d100      	bne.n	80005ba <memset+0xa>
 80005b8:	4770      	bx	lr
 80005ba:	f803 1b01 	strb.w	r1, [r3], #1
 80005be:	e7f9      	b.n	80005b4 <memset+0x4>

080005c0 <iprintf>:
 80005c0:	b40f      	push	{r0, r1, r2, r3}
 80005c2:	4b0a      	ldr	r3, [pc, #40]	; (80005ec <iprintf+0x2c>)
 80005c4:	b513      	push	{r0, r1, r4, lr}
 80005c6:	681c      	ldr	r4, [r3, #0]
 80005c8:	b124      	cbz	r4, 80005d4 <iprintf+0x14>
 80005ca:	69a3      	ldr	r3, [r4, #24]
 80005cc:	b913      	cbnz	r3, 80005d4 <iprintf+0x14>
 80005ce:	4620      	mov	r0, r4
 80005d0:	f000 fa5e 	bl	8000a90 <__sinit>
 80005d4:	ab05      	add	r3, sp, #20
 80005d6:	9a04      	ldr	r2, [sp, #16]
 80005d8:	68a1      	ldr	r1, [r4, #8]
 80005da:	9301      	str	r3, [sp, #4]
 80005dc:	4620      	mov	r0, r4
 80005de:	f000 fc67 	bl	8000eb0 <_vfiprintf_r>
 80005e2:	b002      	add	sp, #8
 80005e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005e8:	b004      	add	sp, #16
 80005ea:	4770      	bx	lr
 80005ec:	20000000 	.word	0x20000000

080005f0 <_puts_r>:
 80005f0:	b570      	push	{r4, r5, r6, lr}
 80005f2:	460e      	mov	r6, r1
 80005f4:	4605      	mov	r5, r0
 80005f6:	b118      	cbz	r0, 8000600 <_puts_r+0x10>
 80005f8:	6983      	ldr	r3, [r0, #24]
 80005fa:	b90b      	cbnz	r3, 8000600 <_puts_r+0x10>
 80005fc:	f000 fa48 	bl	8000a90 <__sinit>
 8000600:	69ab      	ldr	r3, [r5, #24]
 8000602:	68ac      	ldr	r4, [r5, #8]
 8000604:	b913      	cbnz	r3, 800060c <_puts_r+0x1c>
 8000606:	4628      	mov	r0, r5
 8000608:	f000 fa42 	bl	8000a90 <__sinit>
 800060c:	4b2c      	ldr	r3, [pc, #176]	; (80006c0 <_puts_r+0xd0>)
 800060e:	429c      	cmp	r4, r3
 8000610:	d120      	bne.n	8000654 <_puts_r+0x64>
 8000612:	686c      	ldr	r4, [r5, #4]
 8000614:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000616:	07db      	lsls	r3, r3, #31
 8000618:	d405      	bmi.n	8000626 <_puts_r+0x36>
 800061a:	89a3      	ldrh	r3, [r4, #12]
 800061c:	0598      	lsls	r0, r3, #22
 800061e:	d402      	bmi.n	8000626 <_puts_r+0x36>
 8000620:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000622:	f000 fad3 	bl	8000bcc <__retarget_lock_acquire_recursive>
 8000626:	89a3      	ldrh	r3, [r4, #12]
 8000628:	0719      	lsls	r1, r3, #28
 800062a:	d51d      	bpl.n	8000668 <_puts_r+0x78>
 800062c:	6923      	ldr	r3, [r4, #16]
 800062e:	b1db      	cbz	r3, 8000668 <_puts_r+0x78>
 8000630:	3e01      	subs	r6, #1
 8000632:	68a3      	ldr	r3, [r4, #8]
 8000634:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000638:	3b01      	subs	r3, #1
 800063a:	60a3      	str	r3, [r4, #8]
 800063c:	bb39      	cbnz	r1, 800068e <_puts_r+0x9e>
 800063e:	2b00      	cmp	r3, #0
 8000640:	da38      	bge.n	80006b4 <_puts_r+0xc4>
 8000642:	4622      	mov	r2, r4
 8000644:	210a      	movs	r1, #10
 8000646:	4628      	mov	r0, r5
 8000648:	f000 f848 	bl	80006dc <__swbuf_r>
 800064c:	3001      	adds	r0, #1
 800064e:	d011      	beq.n	8000674 <_puts_r+0x84>
 8000650:	250a      	movs	r5, #10
 8000652:	e011      	b.n	8000678 <_puts_r+0x88>
 8000654:	4b1b      	ldr	r3, [pc, #108]	; (80006c4 <_puts_r+0xd4>)
 8000656:	429c      	cmp	r4, r3
 8000658:	d101      	bne.n	800065e <_puts_r+0x6e>
 800065a:	68ac      	ldr	r4, [r5, #8]
 800065c:	e7da      	b.n	8000614 <_puts_r+0x24>
 800065e:	4b1a      	ldr	r3, [pc, #104]	; (80006c8 <_puts_r+0xd8>)
 8000660:	429c      	cmp	r4, r3
 8000662:	bf08      	it	eq
 8000664:	68ec      	ldreq	r4, [r5, #12]
 8000666:	e7d5      	b.n	8000614 <_puts_r+0x24>
 8000668:	4621      	mov	r1, r4
 800066a:	4628      	mov	r0, r5
 800066c:	f000 f888 	bl	8000780 <__swsetup_r>
 8000670:	2800      	cmp	r0, #0
 8000672:	d0dd      	beq.n	8000630 <_puts_r+0x40>
 8000674:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8000678:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800067a:	07da      	lsls	r2, r3, #31
 800067c:	d405      	bmi.n	800068a <_puts_r+0x9a>
 800067e:	89a3      	ldrh	r3, [r4, #12]
 8000680:	059b      	lsls	r3, r3, #22
 8000682:	d402      	bmi.n	800068a <_puts_r+0x9a>
 8000684:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000686:	f000 faa2 	bl	8000bce <__retarget_lock_release_recursive>
 800068a:	4628      	mov	r0, r5
 800068c:	bd70      	pop	{r4, r5, r6, pc}
 800068e:	2b00      	cmp	r3, #0
 8000690:	da04      	bge.n	800069c <_puts_r+0xac>
 8000692:	69a2      	ldr	r2, [r4, #24]
 8000694:	429a      	cmp	r2, r3
 8000696:	dc06      	bgt.n	80006a6 <_puts_r+0xb6>
 8000698:	290a      	cmp	r1, #10
 800069a:	d004      	beq.n	80006a6 <_puts_r+0xb6>
 800069c:	6823      	ldr	r3, [r4, #0]
 800069e:	1c5a      	adds	r2, r3, #1
 80006a0:	6022      	str	r2, [r4, #0]
 80006a2:	7019      	strb	r1, [r3, #0]
 80006a4:	e7c5      	b.n	8000632 <_puts_r+0x42>
 80006a6:	4622      	mov	r2, r4
 80006a8:	4628      	mov	r0, r5
 80006aa:	f000 f817 	bl	80006dc <__swbuf_r>
 80006ae:	3001      	adds	r0, #1
 80006b0:	d1bf      	bne.n	8000632 <_puts_r+0x42>
 80006b2:	e7df      	b.n	8000674 <_puts_r+0x84>
 80006b4:	6823      	ldr	r3, [r4, #0]
 80006b6:	250a      	movs	r5, #10
 80006b8:	1c5a      	adds	r2, r3, #1
 80006ba:	6022      	str	r2, [r4, #0]
 80006bc:	701d      	strb	r5, [r3, #0]
 80006be:	e7db      	b.n	8000678 <_puts_r+0x88>
 80006c0:	08001670 	.word	0x08001670
 80006c4:	08001690 	.word	0x08001690
 80006c8:	08001650 	.word	0x08001650

080006cc <puts>:
 80006cc:	4b02      	ldr	r3, [pc, #8]	; (80006d8 <puts+0xc>)
 80006ce:	4601      	mov	r1, r0
 80006d0:	6818      	ldr	r0, [r3, #0]
 80006d2:	f7ff bf8d 	b.w	80005f0 <_puts_r>
 80006d6:	bf00      	nop
 80006d8:	20000000 	.word	0x20000000

080006dc <__swbuf_r>:
 80006dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006de:	460e      	mov	r6, r1
 80006e0:	4614      	mov	r4, r2
 80006e2:	4605      	mov	r5, r0
 80006e4:	b118      	cbz	r0, 80006ee <__swbuf_r+0x12>
 80006e6:	6983      	ldr	r3, [r0, #24]
 80006e8:	b90b      	cbnz	r3, 80006ee <__swbuf_r+0x12>
 80006ea:	f000 f9d1 	bl	8000a90 <__sinit>
 80006ee:	4b21      	ldr	r3, [pc, #132]	; (8000774 <__swbuf_r+0x98>)
 80006f0:	429c      	cmp	r4, r3
 80006f2:	d12b      	bne.n	800074c <__swbuf_r+0x70>
 80006f4:	686c      	ldr	r4, [r5, #4]
 80006f6:	69a3      	ldr	r3, [r4, #24]
 80006f8:	60a3      	str	r3, [r4, #8]
 80006fa:	89a3      	ldrh	r3, [r4, #12]
 80006fc:	071a      	lsls	r2, r3, #28
 80006fe:	d52f      	bpl.n	8000760 <__swbuf_r+0x84>
 8000700:	6923      	ldr	r3, [r4, #16]
 8000702:	b36b      	cbz	r3, 8000760 <__swbuf_r+0x84>
 8000704:	6923      	ldr	r3, [r4, #16]
 8000706:	6820      	ldr	r0, [r4, #0]
 8000708:	1ac0      	subs	r0, r0, r3
 800070a:	6963      	ldr	r3, [r4, #20]
 800070c:	b2f6      	uxtb	r6, r6
 800070e:	4283      	cmp	r3, r0
 8000710:	4637      	mov	r7, r6
 8000712:	dc04      	bgt.n	800071e <__swbuf_r+0x42>
 8000714:	4621      	mov	r1, r4
 8000716:	4628      	mov	r0, r5
 8000718:	f000 f926 	bl	8000968 <_fflush_r>
 800071c:	bb30      	cbnz	r0, 800076c <__swbuf_r+0x90>
 800071e:	68a3      	ldr	r3, [r4, #8]
 8000720:	3b01      	subs	r3, #1
 8000722:	60a3      	str	r3, [r4, #8]
 8000724:	6823      	ldr	r3, [r4, #0]
 8000726:	1c5a      	adds	r2, r3, #1
 8000728:	6022      	str	r2, [r4, #0]
 800072a:	701e      	strb	r6, [r3, #0]
 800072c:	6963      	ldr	r3, [r4, #20]
 800072e:	3001      	adds	r0, #1
 8000730:	4283      	cmp	r3, r0
 8000732:	d004      	beq.n	800073e <__swbuf_r+0x62>
 8000734:	89a3      	ldrh	r3, [r4, #12]
 8000736:	07db      	lsls	r3, r3, #31
 8000738:	d506      	bpl.n	8000748 <__swbuf_r+0x6c>
 800073a:	2e0a      	cmp	r6, #10
 800073c:	d104      	bne.n	8000748 <__swbuf_r+0x6c>
 800073e:	4621      	mov	r1, r4
 8000740:	4628      	mov	r0, r5
 8000742:	f000 f911 	bl	8000968 <_fflush_r>
 8000746:	b988      	cbnz	r0, 800076c <__swbuf_r+0x90>
 8000748:	4638      	mov	r0, r7
 800074a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800074c:	4b0a      	ldr	r3, [pc, #40]	; (8000778 <__swbuf_r+0x9c>)
 800074e:	429c      	cmp	r4, r3
 8000750:	d101      	bne.n	8000756 <__swbuf_r+0x7a>
 8000752:	68ac      	ldr	r4, [r5, #8]
 8000754:	e7cf      	b.n	80006f6 <__swbuf_r+0x1a>
 8000756:	4b09      	ldr	r3, [pc, #36]	; (800077c <__swbuf_r+0xa0>)
 8000758:	429c      	cmp	r4, r3
 800075a:	bf08      	it	eq
 800075c:	68ec      	ldreq	r4, [r5, #12]
 800075e:	e7ca      	b.n	80006f6 <__swbuf_r+0x1a>
 8000760:	4621      	mov	r1, r4
 8000762:	4628      	mov	r0, r5
 8000764:	f000 f80c 	bl	8000780 <__swsetup_r>
 8000768:	2800      	cmp	r0, #0
 800076a:	d0cb      	beq.n	8000704 <__swbuf_r+0x28>
 800076c:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8000770:	e7ea      	b.n	8000748 <__swbuf_r+0x6c>
 8000772:	bf00      	nop
 8000774:	08001670 	.word	0x08001670
 8000778:	08001690 	.word	0x08001690
 800077c:	08001650 	.word	0x08001650

08000780 <__swsetup_r>:
 8000780:	4b32      	ldr	r3, [pc, #200]	; (800084c <__swsetup_r+0xcc>)
 8000782:	b570      	push	{r4, r5, r6, lr}
 8000784:	681d      	ldr	r5, [r3, #0]
 8000786:	4606      	mov	r6, r0
 8000788:	460c      	mov	r4, r1
 800078a:	b125      	cbz	r5, 8000796 <__swsetup_r+0x16>
 800078c:	69ab      	ldr	r3, [r5, #24]
 800078e:	b913      	cbnz	r3, 8000796 <__swsetup_r+0x16>
 8000790:	4628      	mov	r0, r5
 8000792:	f000 f97d 	bl	8000a90 <__sinit>
 8000796:	4b2e      	ldr	r3, [pc, #184]	; (8000850 <__swsetup_r+0xd0>)
 8000798:	429c      	cmp	r4, r3
 800079a:	d10f      	bne.n	80007bc <__swsetup_r+0x3c>
 800079c:	686c      	ldr	r4, [r5, #4]
 800079e:	89a3      	ldrh	r3, [r4, #12]
 80007a0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80007a4:	0719      	lsls	r1, r3, #28
 80007a6:	d42c      	bmi.n	8000802 <__swsetup_r+0x82>
 80007a8:	06dd      	lsls	r5, r3, #27
 80007aa:	d411      	bmi.n	80007d0 <__swsetup_r+0x50>
 80007ac:	2309      	movs	r3, #9
 80007ae:	6033      	str	r3, [r6, #0]
 80007b0:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80007b4:	81a3      	strh	r3, [r4, #12]
 80007b6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80007ba:	e03e      	b.n	800083a <__swsetup_r+0xba>
 80007bc:	4b25      	ldr	r3, [pc, #148]	; (8000854 <__swsetup_r+0xd4>)
 80007be:	429c      	cmp	r4, r3
 80007c0:	d101      	bne.n	80007c6 <__swsetup_r+0x46>
 80007c2:	68ac      	ldr	r4, [r5, #8]
 80007c4:	e7eb      	b.n	800079e <__swsetup_r+0x1e>
 80007c6:	4b24      	ldr	r3, [pc, #144]	; (8000858 <__swsetup_r+0xd8>)
 80007c8:	429c      	cmp	r4, r3
 80007ca:	bf08      	it	eq
 80007cc:	68ec      	ldreq	r4, [r5, #12]
 80007ce:	e7e6      	b.n	800079e <__swsetup_r+0x1e>
 80007d0:	0758      	lsls	r0, r3, #29
 80007d2:	d512      	bpl.n	80007fa <__swsetup_r+0x7a>
 80007d4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80007d6:	b141      	cbz	r1, 80007ea <__swsetup_r+0x6a>
 80007d8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80007dc:	4299      	cmp	r1, r3
 80007de:	d002      	beq.n	80007e6 <__swsetup_r+0x66>
 80007e0:	4630      	mov	r0, r6
 80007e2:	f000 fa5b 	bl	8000c9c <_free_r>
 80007e6:	2300      	movs	r3, #0
 80007e8:	6363      	str	r3, [r4, #52]	; 0x34
 80007ea:	89a3      	ldrh	r3, [r4, #12]
 80007ec:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80007f0:	81a3      	strh	r3, [r4, #12]
 80007f2:	2300      	movs	r3, #0
 80007f4:	6063      	str	r3, [r4, #4]
 80007f6:	6923      	ldr	r3, [r4, #16]
 80007f8:	6023      	str	r3, [r4, #0]
 80007fa:	89a3      	ldrh	r3, [r4, #12]
 80007fc:	f043 0308 	orr.w	r3, r3, #8
 8000800:	81a3      	strh	r3, [r4, #12]
 8000802:	6923      	ldr	r3, [r4, #16]
 8000804:	b94b      	cbnz	r3, 800081a <__swsetup_r+0x9a>
 8000806:	89a3      	ldrh	r3, [r4, #12]
 8000808:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800080c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000810:	d003      	beq.n	800081a <__swsetup_r+0x9a>
 8000812:	4621      	mov	r1, r4
 8000814:	4630      	mov	r0, r6
 8000816:	f000 fa01 	bl	8000c1c <__smakebuf_r>
 800081a:	89a0      	ldrh	r0, [r4, #12]
 800081c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000820:	f010 0301 	ands.w	r3, r0, #1
 8000824:	d00a      	beq.n	800083c <__swsetup_r+0xbc>
 8000826:	2300      	movs	r3, #0
 8000828:	60a3      	str	r3, [r4, #8]
 800082a:	6963      	ldr	r3, [r4, #20]
 800082c:	425b      	negs	r3, r3
 800082e:	61a3      	str	r3, [r4, #24]
 8000830:	6923      	ldr	r3, [r4, #16]
 8000832:	b943      	cbnz	r3, 8000846 <__swsetup_r+0xc6>
 8000834:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000838:	d1ba      	bne.n	80007b0 <__swsetup_r+0x30>
 800083a:	bd70      	pop	{r4, r5, r6, pc}
 800083c:	0781      	lsls	r1, r0, #30
 800083e:	bf58      	it	pl
 8000840:	6963      	ldrpl	r3, [r4, #20]
 8000842:	60a3      	str	r3, [r4, #8]
 8000844:	e7f4      	b.n	8000830 <__swsetup_r+0xb0>
 8000846:	2000      	movs	r0, #0
 8000848:	e7f7      	b.n	800083a <__swsetup_r+0xba>
 800084a:	bf00      	nop
 800084c:	20000000 	.word	0x20000000
 8000850:	08001670 	.word	0x08001670
 8000854:	08001690 	.word	0x08001690
 8000858:	08001650 	.word	0x08001650

0800085c <__sflush_r>:
 800085c:	898a      	ldrh	r2, [r1, #12]
 800085e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000862:	4605      	mov	r5, r0
 8000864:	0710      	lsls	r0, r2, #28
 8000866:	460c      	mov	r4, r1
 8000868:	d458      	bmi.n	800091c <__sflush_r+0xc0>
 800086a:	684b      	ldr	r3, [r1, #4]
 800086c:	2b00      	cmp	r3, #0
 800086e:	dc05      	bgt.n	800087c <__sflush_r+0x20>
 8000870:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000872:	2b00      	cmp	r3, #0
 8000874:	dc02      	bgt.n	800087c <__sflush_r+0x20>
 8000876:	2000      	movs	r0, #0
 8000878:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800087c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800087e:	2e00      	cmp	r6, #0
 8000880:	d0f9      	beq.n	8000876 <__sflush_r+0x1a>
 8000882:	2300      	movs	r3, #0
 8000884:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000888:	682f      	ldr	r7, [r5, #0]
 800088a:	602b      	str	r3, [r5, #0]
 800088c:	d032      	beq.n	80008f4 <__sflush_r+0x98>
 800088e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000890:	89a3      	ldrh	r3, [r4, #12]
 8000892:	075a      	lsls	r2, r3, #29
 8000894:	d505      	bpl.n	80008a2 <__sflush_r+0x46>
 8000896:	6863      	ldr	r3, [r4, #4]
 8000898:	1ac0      	subs	r0, r0, r3
 800089a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800089c:	b10b      	cbz	r3, 80008a2 <__sflush_r+0x46>
 800089e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80008a0:	1ac0      	subs	r0, r0, r3
 80008a2:	2300      	movs	r3, #0
 80008a4:	4602      	mov	r2, r0
 80008a6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80008a8:	6a21      	ldr	r1, [r4, #32]
 80008aa:	4628      	mov	r0, r5
 80008ac:	47b0      	blx	r6
 80008ae:	1c43      	adds	r3, r0, #1
 80008b0:	89a3      	ldrh	r3, [r4, #12]
 80008b2:	d106      	bne.n	80008c2 <__sflush_r+0x66>
 80008b4:	6829      	ldr	r1, [r5, #0]
 80008b6:	291d      	cmp	r1, #29
 80008b8:	d82c      	bhi.n	8000914 <__sflush_r+0xb8>
 80008ba:	4a2a      	ldr	r2, [pc, #168]	; (8000964 <__sflush_r+0x108>)
 80008bc:	40ca      	lsrs	r2, r1
 80008be:	07d6      	lsls	r6, r2, #31
 80008c0:	d528      	bpl.n	8000914 <__sflush_r+0xb8>
 80008c2:	2200      	movs	r2, #0
 80008c4:	6062      	str	r2, [r4, #4]
 80008c6:	04d9      	lsls	r1, r3, #19
 80008c8:	6922      	ldr	r2, [r4, #16]
 80008ca:	6022      	str	r2, [r4, #0]
 80008cc:	d504      	bpl.n	80008d8 <__sflush_r+0x7c>
 80008ce:	1c42      	adds	r2, r0, #1
 80008d0:	d101      	bne.n	80008d6 <__sflush_r+0x7a>
 80008d2:	682b      	ldr	r3, [r5, #0]
 80008d4:	b903      	cbnz	r3, 80008d8 <__sflush_r+0x7c>
 80008d6:	6560      	str	r0, [r4, #84]	; 0x54
 80008d8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80008da:	602f      	str	r7, [r5, #0]
 80008dc:	2900      	cmp	r1, #0
 80008de:	d0ca      	beq.n	8000876 <__sflush_r+0x1a>
 80008e0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80008e4:	4299      	cmp	r1, r3
 80008e6:	d002      	beq.n	80008ee <__sflush_r+0x92>
 80008e8:	4628      	mov	r0, r5
 80008ea:	f000 f9d7 	bl	8000c9c <_free_r>
 80008ee:	2000      	movs	r0, #0
 80008f0:	6360      	str	r0, [r4, #52]	; 0x34
 80008f2:	e7c1      	b.n	8000878 <__sflush_r+0x1c>
 80008f4:	6a21      	ldr	r1, [r4, #32]
 80008f6:	2301      	movs	r3, #1
 80008f8:	4628      	mov	r0, r5
 80008fa:	47b0      	blx	r6
 80008fc:	1c41      	adds	r1, r0, #1
 80008fe:	d1c7      	bne.n	8000890 <__sflush_r+0x34>
 8000900:	682b      	ldr	r3, [r5, #0]
 8000902:	2b00      	cmp	r3, #0
 8000904:	d0c4      	beq.n	8000890 <__sflush_r+0x34>
 8000906:	2b1d      	cmp	r3, #29
 8000908:	d001      	beq.n	800090e <__sflush_r+0xb2>
 800090a:	2b16      	cmp	r3, #22
 800090c:	d101      	bne.n	8000912 <__sflush_r+0xb6>
 800090e:	602f      	str	r7, [r5, #0]
 8000910:	e7b1      	b.n	8000876 <__sflush_r+0x1a>
 8000912:	89a3      	ldrh	r3, [r4, #12]
 8000914:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000918:	81a3      	strh	r3, [r4, #12]
 800091a:	e7ad      	b.n	8000878 <__sflush_r+0x1c>
 800091c:	690f      	ldr	r7, [r1, #16]
 800091e:	2f00      	cmp	r7, #0
 8000920:	d0a9      	beq.n	8000876 <__sflush_r+0x1a>
 8000922:	0793      	lsls	r3, r2, #30
 8000924:	680e      	ldr	r6, [r1, #0]
 8000926:	bf08      	it	eq
 8000928:	694b      	ldreq	r3, [r1, #20]
 800092a:	600f      	str	r7, [r1, #0]
 800092c:	bf18      	it	ne
 800092e:	2300      	movne	r3, #0
 8000930:	eba6 0807 	sub.w	r8, r6, r7
 8000934:	608b      	str	r3, [r1, #8]
 8000936:	f1b8 0f00 	cmp.w	r8, #0
 800093a:	dd9c      	ble.n	8000876 <__sflush_r+0x1a>
 800093c:	6a21      	ldr	r1, [r4, #32]
 800093e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000940:	4643      	mov	r3, r8
 8000942:	463a      	mov	r2, r7
 8000944:	4628      	mov	r0, r5
 8000946:	47b0      	blx	r6
 8000948:	2800      	cmp	r0, #0
 800094a:	dc06      	bgt.n	800095a <__sflush_r+0xfe>
 800094c:	89a3      	ldrh	r3, [r4, #12]
 800094e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000952:	81a3      	strh	r3, [r4, #12]
 8000954:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000958:	e78e      	b.n	8000878 <__sflush_r+0x1c>
 800095a:	4407      	add	r7, r0
 800095c:	eba8 0800 	sub.w	r8, r8, r0
 8000960:	e7e9      	b.n	8000936 <__sflush_r+0xda>
 8000962:	bf00      	nop
 8000964:	20400001 	.word	0x20400001

08000968 <_fflush_r>:
 8000968:	b538      	push	{r3, r4, r5, lr}
 800096a:	690b      	ldr	r3, [r1, #16]
 800096c:	4605      	mov	r5, r0
 800096e:	460c      	mov	r4, r1
 8000970:	b913      	cbnz	r3, 8000978 <_fflush_r+0x10>
 8000972:	2500      	movs	r5, #0
 8000974:	4628      	mov	r0, r5
 8000976:	bd38      	pop	{r3, r4, r5, pc}
 8000978:	b118      	cbz	r0, 8000982 <_fflush_r+0x1a>
 800097a:	6983      	ldr	r3, [r0, #24]
 800097c:	b90b      	cbnz	r3, 8000982 <_fflush_r+0x1a>
 800097e:	f000 f887 	bl	8000a90 <__sinit>
 8000982:	4b14      	ldr	r3, [pc, #80]	; (80009d4 <_fflush_r+0x6c>)
 8000984:	429c      	cmp	r4, r3
 8000986:	d11b      	bne.n	80009c0 <_fflush_r+0x58>
 8000988:	686c      	ldr	r4, [r5, #4]
 800098a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800098e:	2b00      	cmp	r3, #0
 8000990:	d0ef      	beq.n	8000972 <_fflush_r+0xa>
 8000992:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000994:	07d0      	lsls	r0, r2, #31
 8000996:	d404      	bmi.n	80009a2 <_fflush_r+0x3a>
 8000998:	0599      	lsls	r1, r3, #22
 800099a:	d402      	bmi.n	80009a2 <_fflush_r+0x3a>
 800099c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800099e:	f000 f915 	bl	8000bcc <__retarget_lock_acquire_recursive>
 80009a2:	4628      	mov	r0, r5
 80009a4:	4621      	mov	r1, r4
 80009a6:	f7ff ff59 	bl	800085c <__sflush_r>
 80009aa:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80009ac:	07da      	lsls	r2, r3, #31
 80009ae:	4605      	mov	r5, r0
 80009b0:	d4e0      	bmi.n	8000974 <_fflush_r+0xc>
 80009b2:	89a3      	ldrh	r3, [r4, #12]
 80009b4:	059b      	lsls	r3, r3, #22
 80009b6:	d4dd      	bmi.n	8000974 <_fflush_r+0xc>
 80009b8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80009ba:	f000 f908 	bl	8000bce <__retarget_lock_release_recursive>
 80009be:	e7d9      	b.n	8000974 <_fflush_r+0xc>
 80009c0:	4b05      	ldr	r3, [pc, #20]	; (80009d8 <_fflush_r+0x70>)
 80009c2:	429c      	cmp	r4, r3
 80009c4:	d101      	bne.n	80009ca <_fflush_r+0x62>
 80009c6:	68ac      	ldr	r4, [r5, #8]
 80009c8:	e7df      	b.n	800098a <_fflush_r+0x22>
 80009ca:	4b04      	ldr	r3, [pc, #16]	; (80009dc <_fflush_r+0x74>)
 80009cc:	429c      	cmp	r4, r3
 80009ce:	bf08      	it	eq
 80009d0:	68ec      	ldreq	r4, [r5, #12]
 80009d2:	e7da      	b.n	800098a <_fflush_r+0x22>
 80009d4:	08001670 	.word	0x08001670
 80009d8:	08001690 	.word	0x08001690
 80009dc:	08001650 	.word	0x08001650

080009e0 <std>:
 80009e0:	2300      	movs	r3, #0
 80009e2:	b510      	push	{r4, lr}
 80009e4:	4604      	mov	r4, r0
 80009e6:	e9c0 3300 	strd	r3, r3, [r0]
 80009ea:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80009ee:	6083      	str	r3, [r0, #8]
 80009f0:	8181      	strh	r1, [r0, #12]
 80009f2:	6643      	str	r3, [r0, #100]	; 0x64
 80009f4:	81c2      	strh	r2, [r0, #14]
 80009f6:	6183      	str	r3, [r0, #24]
 80009f8:	4619      	mov	r1, r3
 80009fa:	2208      	movs	r2, #8
 80009fc:	305c      	adds	r0, #92	; 0x5c
 80009fe:	f7ff fdd7 	bl	80005b0 <memset>
 8000a02:	4b05      	ldr	r3, [pc, #20]	; (8000a18 <std+0x38>)
 8000a04:	6263      	str	r3, [r4, #36]	; 0x24
 8000a06:	4b05      	ldr	r3, [pc, #20]	; (8000a1c <std+0x3c>)
 8000a08:	62a3      	str	r3, [r4, #40]	; 0x28
 8000a0a:	4b05      	ldr	r3, [pc, #20]	; (8000a20 <std+0x40>)
 8000a0c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000a0e:	4b05      	ldr	r3, [pc, #20]	; (8000a24 <std+0x44>)
 8000a10:	6224      	str	r4, [r4, #32]
 8000a12:	6323      	str	r3, [r4, #48]	; 0x30
 8000a14:	bd10      	pop	{r4, pc}
 8000a16:	bf00      	nop
 8000a18:	08001459 	.word	0x08001459
 8000a1c:	0800147b 	.word	0x0800147b
 8000a20:	080014b3 	.word	0x080014b3
 8000a24:	080014d7 	.word	0x080014d7

08000a28 <_cleanup_r>:
 8000a28:	4901      	ldr	r1, [pc, #4]	; (8000a30 <_cleanup_r+0x8>)
 8000a2a:	f000 b8af 	b.w	8000b8c <_fwalk_reent>
 8000a2e:	bf00      	nop
 8000a30:	08000969 	.word	0x08000969

08000a34 <__sfmoreglue>:
 8000a34:	b570      	push	{r4, r5, r6, lr}
 8000a36:	2268      	movs	r2, #104	; 0x68
 8000a38:	1e4d      	subs	r5, r1, #1
 8000a3a:	4355      	muls	r5, r2
 8000a3c:	460e      	mov	r6, r1
 8000a3e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000a42:	f000 f997 	bl	8000d74 <_malloc_r>
 8000a46:	4604      	mov	r4, r0
 8000a48:	b140      	cbz	r0, 8000a5c <__sfmoreglue+0x28>
 8000a4a:	2100      	movs	r1, #0
 8000a4c:	e9c0 1600 	strd	r1, r6, [r0]
 8000a50:	300c      	adds	r0, #12
 8000a52:	60a0      	str	r0, [r4, #8]
 8000a54:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000a58:	f7ff fdaa 	bl	80005b0 <memset>
 8000a5c:	4620      	mov	r0, r4
 8000a5e:	bd70      	pop	{r4, r5, r6, pc}

08000a60 <__sfp_lock_acquire>:
 8000a60:	4801      	ldr	r0, [pc, #4]	; (8000a68 <__sfp_lock_acquire+0x8>)
 8000a62:	f000 b8b3 	b.w	8000bcc <__retarget_lock_acquire_recursive>
 8000a66:	bf00      	nop
 8000a68:	20000085 	.word	0x20000085

08000a6c <__sfp_lock_release>:
 8000a6c:	4801      	ldr	r0, [pc, #4]	; (8000a74 <__sfp_lock_release+0x8>)
 8000a6e:	f000 b8ae 	b.w	8000bce <__retarget_lock_release_recursive>
 8000a72:	bf00      	nop
 8000a74:	20000085 	.word	0x20000085

08000a78 <__sinit_lock_acquire>:
 8000a78:	4801      	ldr	r0, [pc, #4]	; (8000a80 <__sinit_lock_acquire+0x8>)
 8000a7a:	f000 b8a7 	b.w	8000bcc <__retarget_lock_acquire_recursive>
 8000a7e:	bf00      	nop
 8000a80:	20000086 	.word	0x20000086

08000a84 <__sinit_lock_release>:
 8000a84:	4801      	ldr	r0, [pc, #4]	; (8000a8c <__sinit_lock_release+0x8>)
 8000a86:	f000 b8a2 	b.w	8000bce <__retarget_lock_release_recursive>
 8000a8a:	bf00      	nop
 8000a8c:	20000086 	.word	0x20000086

08000a90 <__sinit>:
 8000a90:	b510      	push	{r4, lr}
 8000a92:	4604      	mov	r4, r0
 8000a94:	f7ff fff0 	bl	8000a78 <__sinit_lock_acquire>
 8000a98:	69a3      	ldr	r3, [r4, #24]
 8000a9a:	b11b      	cbz	r3, 8000aa4 <__sinit+0x14>
 8000a9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000aa0:	f7ff bff0 	b.w	8000a84 <__sinit_lock_release>
 8000aa4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000aa8:	6523      	str	r3, [r4, #80]	; 0x50
 8000aaa:	4b13      	ldr	r3, [pc, #76]	; (8000af8 <__sinit+0x68>)
 8000aac:	4a13      	ldr	r2, [pc, #76]	; (8000afc <__sinit+0x6c>)
 8000aae:	681b      	ldr	r3, [r3, #0]
 8000ab0:	62a2      	str	r2, [r4, #40]	; 0x28
 8000ab2:	42a3      	cmp	r3, r4
 8000ab4:	bf04      	itt	eq
 8000ab6:	2301      	moveq	r3, #1
 8000ab8:	61a3      	streq	r3, [r4, #24]
 8000aba:	4620      	mov	r0, r4
 8000abc:	f000 f820 	bl	8000b00 <__sfp>
 8000ac0:	6060      	str	r0, [r4, #4]
 8000ac2:	4620      	mov	r0, r4
 8000ac4:	f000 f81c 	bl	8000b00 <__sfp>
 8000ac8:	60a0      	str	r0, [r4, #8]
 8000aca:	4620      	mov	r0, r4
 8000acc:	f000 f818 	bl	8000b00 <__sfp>
 8000ad0:	2200      	movs	r2, #0
 8000ad2:	60e0      	str	r0, [r4, #12]
 8000ad4:	2104      	movs	r1, #4
 8000ad6:	6860      	ldr	r0, [r4, #4]
 8000ad8:	f7ff ff82 	bl	80009e0 <std>
 8000adc:	68a0      	ldr	r0, [r4, #8]
 8000ade:	2201      	movs	r2, #1
 8000ae0:	2109      	movs	r1, #9
 8000ae2:	f7ff ff7d 	bl	80009e0 <std>
 8000ae6:	68e0      	ldr	r0, [r4, #12]
 8000ae8:	2202      	movs	r2, #2
 8000aea:	2112      	movs	r1, #18
 8000aec:	f7ff ff78 	bl	80009e0 <std>
 8000af0:	2301      	movs	r3, #1
 8000af2:	61a3      	str	r3, [r4, #24]
 8000af4:	e7d2      	b.n	8000a9c <__sinit+0xc>
 8000af6:	bf00      	nop
 8000af8:	0800164c 	.word	0x0800164c
 8000afc:	08000a29 	.word	0x08000a29

08000b00 <__sfp>:
 8000b00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b02:	4607      	mov	r7, r0
 8000b04:	f7ff ffac 	bl	8000a60 <__sfp_lock_acquire>
 8000b08:	4b1e      	ldr	r3, [pc, #120]	; (8000b84 <__sfp+0x84>)
 8000b0a:	681e      	ldr	r6, [r3, #0]
 8000b0c:	69b3      	ldr	r3, [r6, #24]
 8000b0e:	b913      	cbnz	r3, 8000b16 <__sfp+0x16>
 8000b10:	4630      	mov	r0, r6
 8000b12:	f7ff ffbd 	bl	8000a90 <__sinit>
 8000b16:	3648      	adds	r6, #72	; 0x48
 8000b18:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000b1c:	3b01      	subs	r3, #1
 8000b1e:	d503      	bpl.n	8000b28 <__sfp+0x28>
 8000b20:	6833      	ldr	r3, [r6, #0]
 8000b22:	b30b      	cbz	r3, 8000b68 <__sfp+0x68>
 8000b24:	6836      	ldr	r6, [r6, #0]
 8000b26:	e7f7      	b.n	8000b18 <__sfp+0x18>
 8000b28:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000b2c:	b9d5      	cbnz	r5, 8000b64 <__sfp+0x64>
 8000b2e:	4b16      	ldr	r3, [pc, #88]	; (8000b88 <__sfp+0x88>)
 8000b30:	60e3      	str	r3, [r4, #12]
 8000b32:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000b36:	6665      	str	r5, [r4, #100]	; 0x64
 8000b38:	f000 f847 	bl	8000bca <__retarget_lock_init_recursive>
 8000b3c:	f7ff ff96 	bl	8000a6c <__sfp_lock_release>
 8000b40:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000b44:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000b48:	6025      	str	r5, [r4, #0]
 8000b4a:	61a5      	str	r5, [r4, #24]
 8000b4c:	2208      	movs	r2, #8
 8000b4e:	4629      	mov	r1, r5
 8000b50:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000b54:	f7ff fd2c 	bl	80005b0 <memset>
 8000b58:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000b5c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000b60:	4620      	mov	r0, r4
 8000b62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b64:	3468      	adds	r4, #104	; 0x68
 8000b66:	e7d9      	b.n	8000b1c <__sfp+0x1c>
 8000b68:	2104      	movs	r1, #4
 8000b6a:	4638      	mov	r0, r7
 8000b6c:	f7ff ff62 	bl	8000a34 <__sfmoreglue>
 8000b70:	4604      	mov	r4, r0
 8000b72:	6030      	str	r0, [r6, #0]
 8000b74:	2800      	cmp	r0, #0
 8000b76:	d1d5      	bne.n	8000b24 <__sfp+0x24>
 8000b78:	f7ff ff78 	bl	8000a6c <__sfp_lock_release>
 8000b7c:	230c      	movs	r3, #12
 8000b7e:	603b      	str	r3, [r7, #0]
 8000b80:	e7ee      	b.n	8000b60 <__sfp+0x60>
 8000b82:	bf00      	nop
 8000b84:	0800164c 	.word	0x0800164c
 8000b88:	ffff0001 	.word	0xffff0001

08000b8c <_fwalk_reent>:
 8000b8c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b90:	4606      	mov	r6, r0
 8000b92:	4688      	mov	r8, r1
 8000b94:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000b98:	2700      	movs	r7, #0
 8000b9a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000b9e:	f1b9 0901 	subs.w	r9, r9, #1
 8000ba2:	d505      	bpl.n	8000bb0 <_fwalk_reent+0x24>
 8000ba4:	6824      	ldr	r4, [r4, #0]
 8000ba6:	2c00      	cmp	r4, #0
 8000ba8:	d1f7      	bne.n	8000b9a <_fwalk_reent+0xe>
 8000baa:	4638      	mov	r0, r7
 8000bac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000bb0:	89ab      	ldrh	r3, [r5, #12]
 8000bb2:	2b01      	cmp	r3, #1
 8000bb4:	d907      	bls.n	8000bc6 <_fwalk_reent+0x3a>
 8000bb6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000bba:	3301      	adds	r3, #1
 8000bbc:	d003      	beq.n	8000bc6 <_fwalk_reent+0x3a>
 8000bbe:	4629      	mov	r1, r5
 8000bc0:	4630      	mov	r0, r6
 8000bc2:	47c0      	blx	r8
 8000bc4:	4307      	orrs	r7, r0
 8000bc6:	3568      	adds	r5, #104	; 0x68
 8000bc8:	e7e9      	b.n	8000b9e <_fwalk_reent+0x12>

08000bca <__retarget_lock_init_recursive>:
 8000bca:	4770      	bx	lr

08000bcc <__retarget_lock_acquire_recursive>:
 8000bcc:	4770      	bx	lr

08000bce <__retarget_lock_release_recursive>:
 8000bce:	4770      	bx	lr

08000bd0 <__swhatbuf_r>:
 8000bd0:	b570      	push	{r4, r5, r6, lr}
 8000bd2:	460e      	mov	r6, r1
 8000bd4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000bd8:	2900      	cmp	r1, #0
 8000bda:	b096      	sub	sp, #88	; 0x58
 8000bdc:	4614      	mov	r4, r2
 8000bde:	461d      	mov	r5, r3
 8000be0:	da08      	bge.n	8000bf4 <__swhatbuf_r+0x24>
 8000be2:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000be6:	2200      	movs	r2, #0
 8000be8:	602a      	str	r2, [r5, #0]
 8000bea:	061a      	lsls	r2, r3, #24
 8000bec:	d410      	bmi.n	8000c10 <__swhatbuf_r+0x40>
 8000bee:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000bf2:	e00e      	b.n	8000c12 <__swhatbuf_r+0x42>
 8000bf4:	466a      	mov	r2, sp
 8000bf6:	f000 fc95 	bl	8001524 <_fstat_r>
 8000bfa:	2800      	cmp	r0, #0
 8000bfc:	dbf1      	blt.n	8000be2 <__swhatbuf_r+0x12>
 8000bfe:	9a01      	ldr	r2, [sp, #4]
 8000c00:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000c04:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000c08:	425a      	negs	r2, r3
 8000c0a:	415a      	adcs	r2, r3
 8000c0c:	602a      	str	r2, [r5, #0]
 8000c0e:	e7ee      	b.n	8000bee <__swhatbuf_r+0x1e>
 8000c10:	2340      	movs	r3, #64	; 0x40
 8000c12:	2000      	movs	r0, #0
 8000c14:	6023      	str	r3, [r4, #0]
 8000c16:	b016      	add	sp, #88	; 0x58
 8000c18:	bd70      	pop	{r4, r5, r6, pc}
	...

08000c1c <__smakebuf_r>:
 8000c1c:	898b      	ldrh	r3, [r1, #12]
 8000c1e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000c20:	079d      	lsls	r5, r3, #30
 8000c22:	4606      	mov	r6, r0
 8000c24:	460c      	mov	r4, r1
 8000c26:	d507      	bpl.n	8000c38 <__smakebuf_r+0x1c>
 8000c28:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000c2c:	6023      	str	r3, [r4, #0]
 8000c2e:	6123      	str	r3, [r4, #16]
 8000c30:	2301      	movs	r3, #1
 8000c32:	6163      	str	r3, [r4, #20]
 8000c34:	b002      	add	sp, #8
 8000c36:	bd70      	pop	{r4, r5, r6, pc}
 8000c38:	ab01      	add	r3, sp, #4
 8000c3a:	466a      	mov	r2, sp
 8000c3c:	f7ff ffc8 	bl	8000bd0 <__swhatbuf_r>
 8000c40:	9900      	ldr	r1, [sp, #0]
 8000c42:	4605      	mov	r5, r0
 8000c44:	4630      	mov	r0, r6
 8000c46:	f000 f895 	bl	8000d74 <_malloc_r>
 8000c4a:	b948      	cbnz	r0, 8000c60 <__smakebuf_r+0x44>
 8000c4c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c50:	059a      	lsls	r2, r3, #22
 8000c52:	d4ef      	bmi.n	8000c34 <__smakebuf_r+0x18>
 8000c54:	f023 0303 	bic.w	r3, r3, #3
 8000c58:	f043 0302 	orr.w	r3, r3, #2
 8000c5c:	81a3      	strh	r3, [r4, #12]
 8000c5e:	e7e3      	b.n	8000c28 <__smakebuf_r+0xc>
 8000c60:	4b0d      	ldr	r3, [pc, #52]	; (8000c98 <__smakebuf_r+0x7c>)
 8000c62:	62b3      	str	r3, [r6, #40]	; 0x28
 8000c64:	89a3      	ldrh	r3, [r4, #12]
 8000c66:	6020      	str	r0, [r4, #0]
 8000c68:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000c6c:	81a3      	strh	r3, [r4, #12]
 8000c6e:	9b00      	ldr	r3, [sp, #0]
 8000c70:	6163      	str	r3, [r4, #20]
 8000c72:	9b01      	ldr	r3, [sp, #4]
 8000c74:	6120      	str	r0, [r4, #16]
 8000c76:	b15b      	cbz	r3, 8000c90 <__smakebuf_r+0x74>
 8000c78:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c7c:	4630      	mov	r0, r6
 8000c7e:	f000 fc63 	bl	8001548 <_isatty_r>
 8000c82:	b128      	cbz	r0, 8000c90 <__smakebuf_r+0x74>
 8000c84:	89a3      	ldrh	r3, [r4, #12]
 8000c86:	f023 0303 	bic.w	r3, r3, #3
 8000c8a:	f043 0301 	orr.w	r3, r3, #1
 8000c8e:	81a3      	strh	r3, [r4, #12]
 8000c90:	89a0      	ldrh	r0, [r4, #12]
 8000c92:	4305      	orrs	r5, r0
 8000c94:	81a5      	strh	r5, [r4, #12]
 8000c96:	e7cd      	b.n	8000c34 <__smakebuf_r+0x18>
 8000c98:	08000a29 	.word	0x08000a29

08000c9c <_free_r>:
 8000c9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000c9e:	2900      	cmp	r1, #0
 8000ca0:	d044      	beq.n	8000d2c <_free_r+0x90>
 8000ca2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000ca6:	9001      	str	r0, [sp, #4]
 8000ca8:	2b00      	cmp	r3, #0
 8000caa:	f1a1 0404 	sub.w	r4, r1, #4
 8000cae:	bfb8      	it	lt
 8000cb0:	18e4      	addlt	r4, r4, r3
 8000cb2:	f000 fc6b 	bl	800158c <__malloc_lock>
 8000cb6:	4a1e      	ldr	r2, [pc, #120]	; (8000d30 <_free_r+0x94>)
 8000cb8:	9801      	ldr	r0, [sp, #4]
 8000cba:	6813      	ldr	r3, [r2, #0]
 8000cbc:	b933      	cbnz	r3, 8000ccc <_free_r+0x30>
 8000cbe:	6063      	str	r3, [r4, #4]
 8000cc0:	6014      	str	r4, [r2, #0]
 8000cc2:	b003      	add	sp, #12
 8000cc4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000cc8:	f000 bc66 	b.w	8001598 <__malloc_unlock>
 8000ccc:	42a3      	cmp	r3, r4
 8000cce:	d908      	bls.n	8000ce2 <_free_r+0x46>
 8000cd0:	6825      	ldr	r5, [r4, #0]
 8000cd2:	1961      	adds	r1, r4, r5
 8000cd4:	428b      	cmp	r3, r1
 8000cd6:	bf01      	itttt	eq
 8000cd8:	6819      	ldreq	r1, [r3, #0]
 8000cda:	685b      	ldreq	r3, [r3, #4]
 8000cdc:	1949      	addeq	r1, r1, r5
 8000cde:	6021      	streq	r1, [r4, #0]
 8000ce0:	e7ed      	b.n	8000cbe <_free_r+0x22>
 8000ce2:	461a      	mov	r2, r3
 8000ce4:	685b      	ldr	r3, [r3, #4]
 8000ce6:	b10b      	cbz	r3, 8000cec <_free_r+0x50>
 8000ce8:	42a3      	cmp	r3, r4
 8000cea:	d9fa      	bls.n	8000ce2 <_free_r+0x46>
 8000cec:	6811      	ldr	r1, [r2, #0]
 8000cee:	1855      	adds	r5, r2, r1
 8000cf0:	42a5      	cmp	r5, r4
 8000cf2:	d10b      	bne.n	8000d0c <_free_r+0x70>
 8000cf4:	6824      	ldr	r4, [r4, #0]
 8000cf6:	4421      	add	r1, r4
 8000cf8:	1854      	adds	r4, r2, r1
 8000cfa:	42a3      	cmp	r3, r4
 8000cfc:	6011      	str	r1, [r2, #0]
 8000cfe:	d1e0      	bne.n	8000cc2 <_free_r+0x26>
 8000d00:	681c      	ldr	r4, [r3, #0]
 8000d02:	685b      	ldr	r3, [r3, #4]
 8000d04:	6053      	str	r3, [r2, #4]
 8000d06:	4421      	add	r1, r4
 8000d08:	6011      	str	r1, [r2, #0]
 8000d0a:	e7da      	b.n	8000cc2 <_free_r+0x26>
 8000d0c:	d902      	bls.n	8000d14 <_free_r+0x78>
 8000d0e:	230c      	movs	r3, #12
 8000d10:	6003      	str	r3, [r0, #0]
 8000d12:	e7d6      	b.n	8000cc2 <_free_r+0x26>
 8000d14:	6825      	ldr	r5, [r4, #0]
 8000d16:	1961      	adds	r1, r4, r5
 8000d18:	428b      	cmp	r3, r1
 8000d1a:	bf04      	itt	eq
 8000d1c:	6819      	ldreq	r1, [r3, #0]
 8000d1e:	685b      	ldreq	r3, [r3, #4]
 8000d20:	6063      	str	r3, [r4, #4]
 8000d22:	bf04      	itt	eq
 8000d24:	1949      	addeq	r1, r1, r5
 8000d26:	6021      	streq	r1, [r4, #0]
 8000d28:	6054      	str	r4, [r2, #4]
 8000d2a:	e7ca      	b.n	8000cc2 <_free_r+0x26>
 8000d2c:	b003      	add	sp, #12
 8000d2e:	bd30      	pop	{r4, r5, pc}
 8000d30:	20000088 	.word	0x20000088

08000d34 <sbrk_aligned>:
 8000d34:	b570      	push	{r4, r5, r6, lr}
 8000d36:	4e0e      	ldr	r6, [pc, #56]	; (8000d70 <sbrk_aligned+0x3c>)
 8000d38:	460c      	mov	r4, r1
 8000d3a:	6831      	ldr	r1, [r6, #0]
 8000d3c:	4605      	mov	r5, r0
 8000d3e:	b911      	cbnz	r1, 8000d46 <sbrk_aligned+0x12>
 8000d40:	f000 fb7a 	bl	8001438 <_sbrk_r>
 8000d44:	6030      	str	r0, [r6, #0]
 8000d46:	4621      	mov	r1, r4
 8000d48:	4628      	mov	r0, r5
 8000d4a:	f000 fb75 	bl	8001438 <_sbrk_r>
 8000d4e:	1c43      	adds	r3, r0, #1
 8000d50:	d00a      	beq.n	8000d68 <sbrk_aligned+0x34>
 8000d52:	1cc4      	adds	r4, r0, #3
 8000d54:	f024 0403 	bic.w	r4, r4, #3
 8000d58:	42a0      	cmp	r0, r4
 8000d5a:	d007      	beq.n	8000d6c <sbrk_aligned+0x38>
 8000d5c:	1a21      	subs	r1, r4, r0
 8000d5e:	4628      	mov	r0, r5
 8000d60:	f000 fb6a 	bl	8001438 <_sbrk_r>
 8000d64:	3001      	adds	r0, #1
 8000d66:	d101      	bne.n	8000d6c <sbrk_aligned+0x38>
 8000d68:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000d6c:	4620      	mov	r0, r4
 8000d6e:	bd70      	pop	{r4, r5, r6, pc}
 8000d70:	2000008c 	.word	0x2000008c

08000d74 <_malloc_r>:
 8000d74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d78:	1ccd      	adds	r5, r1, #3
 8000d7a:	f025 0503 	bic.w	r5, r5, #3
 8000d7e:	3508      	adds	r5, #8
 8000d80:	2d0c      	cmp	r5, #12
 8000d82:	bf38      	it	cc
 8000d84:	250c      	movcc	r5, #12
 8000d86:	2d00      	cmp	r5, #0
 8000d88:	4607      	mov	r7, r0
 8000d8a:	db01      	blt.n	8000d90 <_malloc_r+0x1c>
 8000d8c:	42a9      	cmp	r1, r5
 8000d8e:	d905      	bls.n	8000d9c <_malloc_r+0x28>
 8000d90:	230c      	movs	r3, #12
 8000d92:	603b      	str	r3, [r7, #0]
 8000d94:	2600      	movs	r6, #0
 8000d96:	4630      	mov	r0, r6
 8000d98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000d9c:	4e2e      	ldr	r6, [pc, #184]	; (8000e58 <_malloc_r+0xe4>)
 8000d9e:	f000 fbf5 	bl	800158c <__malloc_lock>
 8000da2:	6833      	ldr	r3, [r6, #0]
 8000da4:	461c      	mov	r4, r3
 8000da6:	bb34      	cbnz	r4, 8000df6 <_malloc_r+0x82>
 8000da8:	4629      	mov	r1, r5
 8000daa:	4638      	mov	r0, r7
 8000dac:	f7ff ffc2 	bl	8000d34 <sbrk_aligned>
 8000db0:	1c43      	adds	r3, r0, #1
 8000db2:	4604      	mov	r4, r0
 8000db4:	d14d      	bne.n	8000e52 <_malloc_r+0xde>
 8000db6:	6834      	ldr	r4, [r6, #0]
 8000db8:	4626      	mov	r6, r4
 8000dba:	2e00      	cmp	r6, #0
 8000dbc:	d140      	bne.n	8000e40 <_malloc_r+0xcc>
 8000dbe:	6823      	ldr	r3, [r4, #0]
 8000dc0:	4631      	mov	r1, r6
 8000dc2:	4638      	mov	r0, r7
 8000dc4:	eb04 0803 	add.w	r8, r4, r3
 8000dc8:	f000 fb36 	bl	8001438 <_sbrk_r>
 8000dcc:	4580      	cmp	r8, r0
 8000dce:	d13a      	bne.n	8000e46 <_malloc_r+0xd2>
 8000dd0:	6821      	ldr	r1, [r4, #0]
 8000dd2:	3503      	adds	r5, #3
 8000dd4:	1a6d      	subs	r5, r5, r1
 8000dd6:	f025 0503 	bic.w	r5, r5, #3
 8000dda:	3508      	adds	r5, #8
 8000ddc:	2d0c      	cmp	r5, #12
 8000dde:	bf38      	it	cc
 8000de0:	250c      	movcc	r5, #12
 8000de2:	4629      	mov	r1, r5
 8000de4:	4638      	mov	r0, r7
 8000de6:	f7ff ffa5 	bl	8000d34 <sbrk_aligned>
 8000dea:	3001      	adds	r0, #1
 8000dec:	d02b      	beq.n	8000e46 <_malloc_r+0xd2>
 8000dee:	6823      	ldr	r3, [r4, #0]
 8000df0:	442b      	add	r3, r5
 8000df2:	6023      	str	r3, [r4, #0]
 8000df4:	e00e      	b.n	8000e14 <_malloc_r+0xa0>
 8000df6:	6822      	ldr	r2, [r4, #0]
 8000df8:	1b52      	subs	r2, r2, r5
 8000dfa:	d41e      	bmi.n	8000e3a <_malloc_r+0xc6>
 8000dfc:	2a0b      	cmp	r2, #11
 8000dfe:	d916      	bls.n	8000e2e <_malloc_r+0xba>
 8000e00:	1961      	adds	r1, r4, r5
 8000e02:	42a3      	cmp	r3, r4
 8000e04:	6025      	str	r5, [r4, #0]
 8000e06:	bf18      	it	ne
 8000e08:	6059      	strne	r1, [r3, #4]
 8000e0a:	6863      	ldr	r3, [r4, #4]
 8000e0c:	bf08      	it	eq
 8000e0e:	6031      	streq	r1, [r6, #0]
 8000e10:	5162      	str	r2, [r4, r5]
 8000e12:	604b      	str	r3, [r1, #4]
 8000e14:	4638      	mov	r0, r7
 8000e16:	f104 060b 	add.w	r6, r4, #11
 8000e1a:	f000 fbbd 	bl	8001598 <__malloc_unlock>
 8000e1e:	f026 0607 	bic.w	r6, r6, #7
 8000e22:	1d23      	adds	r3, r4, #4
 8000e24:	1af2      	subs	r2, r6, r3
 8000e26:	d0b6      	beq.n	8000d96 <_malloc_r+0x22>
 8000e28:	1b9b      	subs	r3, r3, r6
 8000e2a:	50a3      	str	r3, [r4, r2]
 8000e2c:	e7b3      	b.n	8000d96 <_malloc_r+0x22>
 8000e2e:	6862      	ldr	r2, [r4, #4]
 8000e30:	42a3      	cmp	r3, r4
 8000e32:	bf0c      	ite	eq
 8000e34:	6032      	streq	r2, [r6, #0]
 8000e36:	605a      	strne	r2, [r3, #4]
 8000e38:	e7ec      	b.n	8000e14 <_malloc_r+0xa0>
 8000e3a:	4623      	mov	r3, r4
 8000e3c:	6864      	ldr	r4, [r4, #4]
 8000e3e:	e7b2      	b.n	8000da6 <_malloc_r+0x32>
 8000e40:	4634      	mov	r4, r6
 8000e42:	6876      	ldr	r6, [r6, #4]
 8000e44:	e7b9      	b.n	8000dba <_malloc_r+0x46>
 8000e46:	230c      	movs	r3, #12
 8000e48:	603b      	str	r3, [r7, #0]
 8000e4a:	4638      	mov	r0, r7
 8000e4c:	f000 fba4 	bl	8001598 <__malloc_unlock>
 8000e50:	e7a1      	b.n	8000d96 <_malloc_r+0x22>
 8000e52:	6025      	str	r5, [r4, #0]
 8000e54:	e7de      	b.n	8000e14 <_malloc_r+0xa0>
 8000e56:	bf00      	nop
 8000e58:	20000088 	.word	0x20000088

08000e5c <__sfputc_r>:
 8000e5c:	6893      	ldr	r3, [r2, #8]
 8000e5e:	3b01      	subs	r3, #1
 8000e60:	2b00      	cmp	r3, #0
 8000e62:	b410      	push	{r4}
 8000e64:	6093      	str	r3, [r2, #8]
 8000e66:	da08      	bge.n	8000e7a <__sfputc_r+0x1e>
 8000e68:	6994      	ldr	r4, [r2, #24]
 8000e6a:	42a3      	cmp	r3, r4
 8000e6c:	db01      	blt.n	8000e72 <__sfputc_r+0x16>
 8000e6e:	290a      	cmp	r1, #10
 8000e70:	d103      	bne.n	8000e7a <__sfputc_r+0x1e>
 8000e72:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000e76:	f7ff bc31 	b.w	80006dc <__swbuf_r>
 8000e7a:	6813      	ldr	r3, [r2, #0]
 8000e7c:	1c58      	adds	r0, r3, #1
 8000e7e:	6010      	str	r0, [r2, #0]
 8000e80:	7019      	strb	r1, [r3, #0]
 8000e82:	4608      	mov	r0, r1
 8000e84:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000e88:	4770      	bx	lr

08000e8a <__sfputs_r>:
 8000e8a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e8c:	4606      	mov	r6, r0
 8000e8e:	460f      	mov	r7, r1
 8000e90:	4614      	mov	r4, r2
 8000e92:	18d5      	adds	r5, r2, r3
 8000e94:	42ac      	cmp	r4, r5
 8000e96:	d101      	bne.n	8000e9c <__sfputs_r+0x12>
 8000e98:	2000      	movs	r0, #0
 8000e9a:	e007      	b.n	8000eac <__sfputs_r+0x22>
 8000e9c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ea0:	463a      	mov	r2, r7
 8000ea2:	4630      	mov	r0, r6
 8000ea4:	f7ff ffda 	bl	8000e5c <__sfputc_r>
 8000ea8:	1c43      	adds	r3, r0, #1
 8000eaa:	d1f3      	bne.n	8000e94 <__sfputs_r+0xa>
 8000eac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000eb0 <_vfiprintf_r>:
 8000eb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000eb4:	460d      	mov	r5, r1
 8000eb6:	b09d      	sub	sp, #116	; 0x74
 8000eb8:	4614      	mov	r4, r2
 8000eba:	4698      	mov	r8, r3
 8000ebc:	4606      	mov	r6, r0
 8000ebe:	b118      	cbz	r0, 8000ec8 <_vfiprintf_r+0x18>
 8000ec0:	6983      	ldr	r3, [r0, #24]
 8000ec2:	b90b      	cbnz	r3, 8000ec8 <_vfiprintf_r+0x18>
 8000ec4:	f7ff fde4 	bl	8000a90 <__sinit>
 8000ec8:	4b89      	ldr	r3, [pc, #548]	; (80010f0 <_vfiprintf_r+0x240>)
 8000eca:	429d      	cmp	r5, r3
 8000ecc:	d11b      	bne.n	8000f06 <_vfiprintf_r+0x56>
 8000ece:	6875      	ldr	r5, [r6, #4]
 8000ed0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ed2:	07d9      	lsls	r1, r3, #31
 8000ed4:	d405      	bmi.n	8000ee2 <_vfiprintf_r+0x32>
 8000ed6:	89ab      	ldrh	r3, [r5, #12]
 8000ed8:	059a      	lsls	r2, r3, #22
 8000eda:	d402      	bmi.n	8000ee2 <_vfiprintf_r+0x32>
 8000edc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000ede:	f7ff fe75 	bl	8000bcc <__retarget_lock_acquire_recursive>
 8000ee2:	89ab      	ldrh	r3, [r5, #12]
 8000ee4:	071b      	lsls	r3, r3, #28
 8000ee6:	d501      	bpl.n	8000eec <_vfiprintf_r+0x3c>
 8000ee8:	692b      	ldr	r3, [r5, #16]
 8000eea:	b9eb      	cbnz	r3, 8000f28 <_vfiprintf_r+0x78>
 8000eec:	4629      	mov	r1, r5
 8000eee:	4630      	mov	r0, r6
 8000ef0:	f7ff fc46 	bl	8000780 <__swsetup_r>
 8000ef4:	b1c0      	cbz	r0, 8000f28 <_vfiprintf_r+0x78>
 8000ef6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ef8:	07dc      	lsls	r4, r3, #31
 8000efa:	d50e      	bpl.n	8000f1a <_vfiprintf_r+0x6a>
 8000efc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000f00:	b01d      	add	sp, #116	; 0x74
 8000f02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000f06:	4b7b      	ldr	r3, [pc, #492]	; (80010f4 <_vfiprintf_r+0x244>)
 8000f08:	429d      	cmp	r5, r3
 8000f0a:	d101      	bne.n	8000f10 <_vfiprintf_r+0x60>
 8000f0c:	68b5      	ldr	r5, [r6, #8]
 8000f0e:	e7df      	b.n	8000ed0 <_vfiprintf_r+0x20>
 8000f10:	4b79      	ldr	r3, [pc, #484]	; (80010f8 <_vfiprintf_r+0x248>)
 8000f12:	429d      	cmp	r5, r3
 8000f14:	bf08      	it	eq
 8000f16:	68f5      	ldreq	r5, [r6, #12]
 8000f18:	e7da      	b.n	8000ed0 <_vfiprintf_r+0x20>
 8000f1a:	89ab      	ldrh	r3, [r5, #12]
 8000f1c:	0598      	lsls	r0, r3, #22
 8000f1e:	d4ed      	bmi.n	8000efc <_vfiprintf_r+0x4c>
 8000f20:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000f22:	f7ff fe54 	bl	8000bce <__retarget_lock_release_recursive>
 8000f26:	e7e9      	b.n	8000efc <_vfiprintf_r+0x4c>
 8000f28:	2300      	movs	r3, #0
 8000f2a:	9309      	str	r3, [sp, #36]	; 0x24
 8000f2c:	2320      	movs	r3, #32
 8000f2e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000f32:	f8cd 800c 	str.w	r8, [sp, #12]
 8000f36:	2330      	movs	r3, #48	; 0x30
 8000f38:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80010fc <_vfiprintf_r+0x24c>
 8000f3c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000f40:	f04f 0901 	mov.w	r9, #1
 8000f44:	4623      	mov	r3, r4
 8000f46:	469a      	mov	sl, r3
 8000f48:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000f4c:	b10a      	cbz	r2, 8000f52 <_vfiprintf_r+0xa2>
 8000f4e:	2a25      	cmp	r2, #37	; 0x25
 8000f50:	d1f9      	bne.n	8000f46 <_vfiprintf_r+0x96>
 8000f52:	ebba 0b04 	subs.w	fp, sl, r4
 8000f56:	d00b      	beq.n	8000f70 <_vfiprintf_r+0xc0>
 8000f58:	465b      	mov	r3, fp
 8000f5a:	4622      	mov	r2, r4
 8000f5c:	4629      	mov	r1, r5
 8000f5e:	4630      	mov	r0, r6
 8000f60:	f7ff ff93 	bl	8000e8a <__sfputs_r>
 8000f64:	3001      	adds	r0, #1
 8000f66:	f000 80aa 	beq.w	80010be <_vfiprintf_r+0x20e>
 8000f6a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000f6c:	445a      	add	r2, fp
 8000f6e:	9209      	str	r2, [sp, #36]	; 0x24
 8000f70:	f89a 3000 	ldrb.w	r3, [sl]
 8000f74:	2b00      	cmp	r3, #0
 8000f76:	f000 80a2 	beq.w	80010be <_vfiprintf_r+0x20e>
 8000f7a:	2300      	movs	r3, #0
 8000f7c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000f80:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000f84:	f10a 0a01 	add.w	sl, sl, #1
 8000f88:	9304      	str	r3, [sp, #16]
 8000f8a:	9307      	str	r3, [sp, #28]
 8000f8c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000f90:	931a      	str	r3, [sp, #104]	; 0x68
 8000f92:	4654      	mov	r4, sl
 8000f94:	2205      	movs	r2, #5
 8000f96:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000f9a:	4858      	ldr	r0, [pc, #352]	; (80010fc <_vfiprintf_r+0x24c>)
 8000f9c:	f7ff f938 	bl	8000210 <memchr>
 8000fa0:	9a04      	ldr	r2, [sp, #16]
 8000fa2:	b9d8      	cbnz	r0, 8000fdc <_vfiprintf_r+0x12c>
 8000fa4:	06d1      	lsls	r1, r2, #27
 8000fa6:	bf44      	itt	mi
 8000fa8:	2320      	movmi	r3, #32
 8000faa:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000fae:	0713      	lsls	r3, r2, #28
 8000fb0:	bf44      	itt	mi
 8000fb2:	232b      	movmi	r3, #43	; 0x2b
 8000fb4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000fb8:	f89a 3000 	ldrb.w	r3, [sl]
 8000fbc:	2b2a      	cmp	r3, #42	; 0x2a
 8000fbe:	d015      	beq.n	8000fec <_vfiprintf_r+0x13c>
 8000fc0:	9a07      	ldr	r2, [sp, #28]
 8000fc2:	4654      	mov	r4, sl
 8000fc4:	2000      	movs	r0, #0
 8000fc6:	f04f 0c0a 	mov.w	ip, #10
 8000fca:	4621      	mov	r1, r4
 8000fcc:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000fd0:	3b30      	subs	r3, #48	; 0x30
 8000fd2:	2b09      	cmp	r3, #9
 8000fd4:	d94e      	bls.n	8001074 <_vfiprintf_r+0x1c4>
 8000fd6:	b1b0      	cbz	r0, 8001006 <_vfiprintf_r+0x156>
 8000fd8:	9207      	str	r2, [sp, #28]
 8000fda:	e014      	b.n	8001006 <_vfiprintf_r+0x156>
 8000fdc:	eba0 0308 	sub.w	r3, r0, r8
 8000fe0:	fa09 f303 	lsl.w	r3, r9, r3
 8000fe4:	4313      	orrs	r3, r2
 8000fe6:	9304      	str	r3, [sp, #16]
 8000fe8:	46a2      	mov	sl, r4
 8000fea:	e7d2      	b.n	8000f92 <_vfiprintf_r+0xe2>
 8000fec:	9b03      	ldr	r3, [sp, #12]
 8000fee:	1d19      	adds	r1, r3, #4
 8000ff0:	681b      	ldr	r3, [r3, #0]
 8000ff2:	9103      	str	r1, [sp, #12]
 8000ff4:	2b00      	cmp	r3, #0
 8000ff6:	bfbb      	ittet	lt
 8000ff8:	425b      	neglt	r3, r3
 8000ffa:	f042 0202 	orrlt.w	r2, r2, #2
 8000ffe:	9307      	strge	r3, [sp, #28]
 8001000:	9307      	strlt	r3, [sp, #28]
 8001002:	bfb8      	it	lt
 8001004:	9204      	strlt	r2, [sp, #16]
 8001006:	7823      	ldrb	r3, [r4, #0]
 8001008:	2b2e      	cmp	r3, #46	; 0x2e
 800100a:	d10c      	bne.n	8001026 <_vfiprintf_r+0x176>
 800100c:	7863      	ldrb	r3, [r4, #1]
 800100e:	2b2a      	cmp	r3, #42	; 0x2a
 8001010:	d135      	bne.n	800107e <_vfiprintf_r+0x1ce>
 8001012:	9b03      	ldr	r3, [sp, #12]
 8001014:	1d1a      	adds	r2, r3, #4
 8001016:	681b      	ldr	r3, [r3, #0]
 8001018:	9203      	str	r2, [sp, #12]
 800101a:	2b00      	cmp	r3, #0
 800101c:	bfb8      	it	lt
 800101e:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8001022:	3402      	adds	r4, #2
 8001024:	9305      	str	r3, [sp, #20]
 8001026:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800110c <_vfiprintf_r+0x25c>
 800102a:	7821      	ldrb	r1, [r4, #0]
 800102c:	2203      	movs	r2, #3
 800102e:	4650      	mov	r0, sl
 8001030:	f7ff f8ee 	bl	8000210 <memchr>
 8001034:	b140      	cbz	r0, 8001048 <_vfiprintf_r+0x198>
 8001036:	2340      	movs	r3, #64	; 0x40
 8001038:	eba0 000a 	sub.w	r0, r0, sl
 800103c:	fa03 f000 	lsl.w	r0, r3, r0
 8001040:	9b04      	ldr	r3, [sp, #16]
 8001042:	4303      	orrs	r3, r0
 8001044:	3401      	adds	r4, #1
 8001046:	9304      	str	r3, [sp, #16]
 8001048:	f814 1b01 	ldrb.w	r1, [r4], #1
 800104c:	482c      	ldr	r0, [pc, #176]	; (8001100 <_vfiprintf_r+0x250>)
 800104e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8001052:	2206      	movs	r2, #6
 8001054:	f7ff f8dc 	bl	8000210 <memchr>
 8001058:	2800      	cmp	r0, #0
 800105a:	d03f      	beq.n	80010dc <_vfiprintf_r+0x22c>
 800105c:	4b29      	ldr	r3, [pc, #164]	; (8001104 <_vfiprintf_r+0x254>)
 800105e:	bb1b      	cbnz	r3, 80010a8 <_vfiprintf_r+0x1f8>
 8001060:	9b03      	ldr	r3, [sp, #12]
 8001062:	3307      	adds	r3, #7
 8001064:	f023 0307 	bic.w	r3, r3, #7
 8001068:	3308      	adds	r3, #8
 800106a:	9303      	str	r3, [sp, #12]
 800106c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800106e:	443b      	add	r3, r7
 8001070:	9309      	str	r3, [sp, #36]	; 0x24
 8001072:	e767      	b.n	8000f44 <_vfiprintf_r+0x94>
 8001074:	fb0c 3202 	mla	r2, ip, r2, r3
 8001078:	460c      	mov	r4, r1
 800107a:	2001      	movs	r0, #1
 800107c:	e7a5      	b.n	8000fca <_vfiprintf_r+0x11a>
 800107e:	2300      	movs	r3, #0
 8001080:	3401      	adds	r4, #1
 8001082:	9305      	str	r3, [sp, #20]
 8001084:	4619      	mov	r1, r3
 8001086:	f04f 0c0a 	mov.w	ip, #10
 800108a:	4620      	mov	r0, r4
 800108c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8001090:	3a30      	subs	r2, #48	; 0x30
 8001092:	2a09      	cmp	r2, #9
 8001094:	d903      	bls.n	800109e <_vfiprintf_r+0x1ee>
 8001096:	2b00      	cmp	r3, #0
 8001098:	d0c5      	beq.n	8001026 <_vfiprintf_r+0x176>
 800109a:	9105      	str	r1, [sp, #20]
 800109c:	e7c3      	b.n	8001026 <_vfiprintf_r+0x176>
 800109e:	fb0c 2101 	mla	r1, ip, r1, r2
 80010a2:	4604      	mov	r4, r0
 80010a4:	2301      	movs	r3, #1
 80010a6:	e7f0      	b.n	800108a <_vfiprintf_r+0x1da>
 80010a8:	ab03      	add	r3, sp, #12
 80010aa:	9300      	str	r3, [sp, #0]
 80010ac:	462a      	mov	r2, r5
 80010ae:	4b16      	ldr	r3, [pc, #88]	; (8001108 <_vfiprintf_r+0x258>)
 80010b0:	a904      	add	r1, sp, #16
 80010b2:	4630      	mov	r0, r6
 80010b4:	f3af 8000 	nop.w
 80010b8:	4607      	mov	r7, r0
 80010ba:	1c78      	adds	r0, r7, #1
 80010bc:	d1d6      	bne.n	800106c <_vfiprintf_r+0x1bc>
 80010be:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80010c0:	07d9      	lsls	r1, r3, #31
 80010c2:	d405      	bmi.n	80010d0 <_vfiprintf_r+0x220>
 80010c4:	89ab      	ldrh	r3, [r5, #12]
 80010c6:	059a      	lsls	r2, r3, #22
 80010c8:	d402      	bmi.n	80010d0 <_vfiprintf_r+0x220>
 80010ca:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80010cc:	f7ff fd7f 	bl	8000bce <__retarget_lock_release_recursive>
 80010d0:	89ab      	ldrh	r3, [r5, #12]
 80010d2:	065b      	lsls	r3, r3, #25
 80010d4:	f53f af12 	bmi.w	8000efc <_vfiprintf_r+0x4c>
 80010d8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80010da:	e711      	b.n	8000f00 <_vfiprintf_r+0x50>
 80010dc:	ab03      	add	r3, sp, #12
 80010de:	9300      	str	r3, [sp, #0]
 80010e0:	462a      	mov	r2, r5
 80010e2:	4b09      	ldr	r3, [pc, #36]	; (8001108 <_vfiprintf_r+0x258>)
 80010e4:	a904      	add	r1, sp, #16
 80010e6:	4630      	mov	r0, r6
 80010e8:	f000 f880 	bl	80011ec <_printf_i>
 80010ec:	e7e4      	b.n	80010b8 <_vfiprintf_r+0x208>
 80010ee:	bf00      	nop
 80010f0:	08001670 	.word	0x08001670
 80010f4:	08001690 	.word	0x08001690
 80010f8:	08001650 	.word	0x08001650
 80010fc:	080016b0 	.word	0x080016b0
 8001100:	080016ba 	.word	0x080016ba
 8001104:	00000000 	.word	0x00000000
 8001108:	08000e8b 	.word	0x08000e8b
 800110c:	080016b6 	.word	0x080016b6

08001110 <_printf_common>:
 8001110:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001114:	4616      	mov	r6, r2
 8001116:	4699      	mov	r9, r3
 8001118:	688a      	ldr	r2, [r1, #8]
 800111a:	690b      	ldr	r3, [r1, #16]
 800111c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001120:	4293      	cmp	r3, r2
 8001122:	bfb8      	it	lt
 8001124:	4613      	movlt	r3, r2
 8001126:	6033      	str	r3, [r6, #0]
 8001128:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800112c:	4607      	mov	r7, r0
 800112e:	460c      	mov	r4, r1
 8001130:	b10a      	cbz	r2, 8001136 <_printf_common+0x26>
 8001132:	3301      	adds	r3, #1
 8001134:	6033      	str	r3, [r6, #0]
 8001136:	6823      	ldr	r3, [r4, #0]
 8001138:	0699      	lsls	r1, r3, #26
 800113a:	bf42      	ittt	mi
 800113c:	6833      	ldrmi	r3, [r6, #0]
 800113e:	3302      	addmi	r3, #2
 8001140:	6033      	strmi	r3, [r6, #0]
 8001142:	6825      	ldr	r5, [r4, #0]
 8001144:	f015 0506 	ands.w	r5, r5, #6
 8001148:	d106      	bne.n	8001158 <_printf_common+0x48>
 800114a:	f104 0a19 	add.w	sl, r4, #25
 800114e:	68e3      	ldr	r3, [r4, #12]
 8001150:	6832      	ldr	r2, [r6, #0]
 8001152:	1a9b      	subs	r3, r3, r2
 8001154:	42ab      	cmp	r3, r5
 8001156:	dc26      	bgt.n	80011a6 <_printf_common+0x96>
 8001158:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800115c:	1e13      	subs	r3, r2, #0
 800115e:	6822      	ldr	r2, [r4, #0]
 8001160:	bf18      	it	ne
 8001162:	2301      	movne	r3, #1
 8001164:	0692      	lsls	r2, r2, #26
 8001166:	d42b      	bmi.n	80011c0 <_printf_common+0xb0>
 8001168:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800116c:	4649      	mov	r1, r9
 800116e:	4638      	mov	r0, r7
 8001170:	47c0      	blx	r8
 8001172:	3001      	adds	r0, #1
 8001174:	d01e      	beq.n	80011b4 <_printf_common+0xa4>
 8001176:	6823      	ldr	r3, [r4, #0]
 8001178:	68e5      	ldr	r5, [r4, #12]
 800117a:	6832      	ldr	r2, [r6, #0]
 800117c:	f003 0306 	and.w	r3, r3, #6
 8001180:	2b04      	cmp	r3, #4
 8001182:	bf08      	it	eq
 8001184:	1aad      	subeq	r5, r5, r2
 8001186:	68a3      	ldr	r3, [r4, #8]
 8001188:	6922      	ldr	r2, [r4, #16]
 800118a:	bf0c      	ite	eq
 800118c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001190:	2500      	movne	r5, #0
 8001192:	4293      	cmp	r3, r2
 8001194:	bfc4      	itt	gt
 8001196:	1a9b      	subgt	r3, r3, r2
 8001198:	18ed      	addgt	r5, r5, r3
 800119a:	2600      	movs	r6, #0
 800119c:	341a      	adds	r4, #26
 800119e:	42b5      	cmp	r5, r6
 80011a0:	d11a      	bne.n	80011d8 <_printf_common+0xc8>
 80011a2:	2000      	movs	r0, #0
 80011a4:	e008      	b.n	80011b8 <_printf_common+0xa8>
 80011a6:	2301      	movs	r3, #1
 80011a8:	4652      	mov	r2, sl
 80011aa:	4649      	mov	r1, r9
 80011ac:	4638      	mov	r0, r7
 80011ae:	47c0      	blx	r8
 80011b0:	3001      	adds	r0, #1
 80011b2:	d103      	bne.n	80011bc <_printf_common+0xac>
 80011b4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80011b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80011bc:	3501      	adds	r5, #1
 80011be:	e7c6      	b.n	800114e <_printf_common+0x3e>
 80011c0:	18e1      	adds	r1, r4, r3
 80011c2:	1c5a      	adds	r2, r3, #1
 80011c4:	2030      	movs	r0, #48	; 0x30
 80011c6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80011ca:	4422      	add	r2, r4
 80011cc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80011d0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80011d4:	3302      	adds	r3, #2
 80011d6:	e7c7      	b.n	8001168 <_printf_common+0x58>
 80011d8:	2301      	movs	r3, #1
 80011da:	4622      	mov	r2, r4
 80011dc:	4649      	mov	r1, r9
 80011de:	4638      	mov	r0, r7
 80011e0:	47c0      	blx	r8
 80011e2:	3001      	adds	r0, #1
 80011e4:	d0e6      	beq.n	80011b4 <_printf_common+0xa4>
 80011e6:	3601      	adds	r6, #1
 80011e8:	e7d9      	b.n	800119e <_printf_common+0x8e>
	...

080011ec <_printf_i>:
 80011ec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80011f0:	7e0f      	ldrb	r7, [r1, #24]
 80011f2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80011f4:	2f78      	cmp	r7, #120	; 0x78
 80011f6:	4691      	mov	r9, r2
 80011f8:	4680      	mov	r8, r0
 80011fa:	460c      	mov	r4, r1
 80011fc:	469a      	mov	sl, r3
 80011fe:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8001202:	d807      	bhi.n	8001214 <_printf_i+0x28>
 8001204:	2f62      	cmp	r7, #98	; 0x62
 8001206:	d80a      	bhi.n	800121e <_printf_i+0x32>
 8001208:	2f00      	cmp	r7, #0
 800120a:	f000 80d8 	beq.w	80013be <_printf_i+0x1d2>
 800120e:	2f58      	cmp	r7, #88	; 0x58
 8001210:	f000 80a3 	beq.w	800135a <_printf_i+0x16e>
 8001214:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001218:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800121c:	e03a      	b.n	8001294 <_printf_i+0xa8>
 800121e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001222:	2b15      	cmp	r3, #21
 8001224:	d8f6      	bhi.n	8001214 <_printf_i+0x28>
 8001226:	a101      	add	r1, pc, #4	; (adr r1, 800122c <_printf_i+0x40>)
 8001228:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800122c:	08001285 	.word	0x08001285
 8001230:	08001299 	.word	0x08001299
 8001234:	08001215 	.word	0x08001215
 8001238:	08001215 	.word	0x08001215
 800123c:	08001215 	.word	0x08001215
 8001240:	08001215 	.word	0x08001215
 8001244:	08001299 	.word	0x08001299
 8001248:	08001215 	.word	0x08001215
 800124c:	08001215 	.word	0x08001215
 8001250:	08001215 	.word	0x08001215
 8001254:	08001215 	.word	0x08001215
 8001258:	080013a5 	.word	0x080013a5
 800125c:	080012c9 	.word	0x080012c9
 8001260:	08001387 	.word	0x08001387
 8001264:	08001215 	.word	0x08001215
 8001268:	08001215 	.word	0x08001215
 800126c:	080013c7 	.word	0x080013c7
 8001270:	08001215 	.word	0x08001215
 8001274:	080012c9 	.word	0x080012c9
 8001278:	08001215 	.word	0x08001215
 800127c:	08001215 	.word	0x08001215
 8001280:	0800138f 	.word	0x0800138f
 8001284:	682b      	ldr	r3, [r5, #0]
 8001286:	1d1a      	adds	r2, r3, #4
 8001288:	681b      	ldr	r3, [r3, #0]
 800128a:	602a      	str	r2, [r5, #0]
 800128c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001290:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001294:	2301      	movs	r3, #1
 8001296:	e0a3      	b.n	80013e0 <_printf_i+0x1f4>
 8001298:	6820      	ldr	r0, [r4, #0]
 800129a:	6829      	ldr	r1, [r5, #0]
 800129c:	0606      	lsls	r6, r0, #24
 800129e:	f101 0304 	add.w	r3, r1, #4
 80012a2:	d50a      	bpl.n	80012ba <_printf_i+0xce>
 80012a4:	680e      	ldr	r6, [r1, #0]
 80012a6:	602b      	str	r3, [r5, #0]
 80012a8:	2e00      	cmp	r6, #0
 80012aa:	da03      	bge.n	80012b4 <_printf_i+0xc8>
 80012ac:	232d      	movs	r3, #45	; 0x2d
 80012ae:	4276      	negs	r6, r6
 80012b0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80012b4:	485e      	ldr	r0, [pc, #376]	; (8001430 <_printf_i+0x244>)
 80012b6:	230a      	movs	r3, #10
 80012b8:	e019      	b.n	80012ee <_printf_i+0x102>
 80012ba:	680e      	ldr	r6, [r1, #0]
 80012bc:	602b      	str	r3, [r5, #0]
 80012be:	f010 0f40 	tst.w	r0, #64	; 0x40
 80012c2:	bf18      	it	ne
 80012c4:	b236      	sxthne	r6, r6
 80012c6:	e7ef      	b.n	80012a8 <_printf_i+0xbc>
 80012c8:	682b      	ldr	r3, [r5, #0]
 80012ca:	6820      	ldr	r0, [r4, #0]
 80012cc:	1d19      	adds	r1, r3, #4
 80012ce:	6029      	str	r1, [r5, #0]
 80012d0:	0601      	lsls	r1, r0, #24
 80012d2:	d501      	bpl.n	80012d8 <_printf_i+0xec>
 80012d4:	681e      	ldr	r6, [r3, #0]
 80012d6:	e002      	b.n	80012de <_printf_i+0xf2>
 80012d8:	0646      	lsls	r6, r0, #25
 80012da:	d5fb      	bpl.n	80012d4 <_printf_i+0xe8>
 80012dc:	881e      	ldrh	r6, [r3, #0]
 80012de:	4854      	ldr	r0, [pc, #336]	; (8001430 <_printf_i+0x244>)
 80012e0:	2f6f      	cmp	r7, #111	; 0x6f
 80012e2:	bf0c      	ite	eq
 80012e4:	2308      	moveq	r3, #8
 80012e6:	230a      	movne	r3, #10
 80012e8:	2100      	movs	r1, #0
 80012ea:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80012ee:	6865      	ldr	r5, [r4, #4]
 80012f0:	60a5      	str	r5, [r4, #8]
 80012f2:	2d00      	cmp	r5, #0
 80012f4:	bfa2      	ittt	ge
 80012f6:	6821      	ldrge	r1, [r4, #0]
 80012f8:	f021 0104 	bicge.w	r1, r1, #4
 80012fc:	6021      	strge	r1, [r4, #0]
 80012fe:	b90e      	cbnz	r6, 8001304 <_printf_i+0x118>
 8001300:	2d00      	cmp	r5, #0
 8001302:	d04d      	beq.n	80013a0 <_printf_i+0x1b4>
 8001304:	4615      	mov	r5, r2
 8001306:	fbb6 f1f3 	udiv	r1, r6, r3
 800130a:	fb03 6711 	mls	r7, r3, r1, r6
 800130e:	5dc7      	ldrb	r7, [r0, r7]
 8001310:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001314:	4637      	mov	r7, r6
 8001316:	42bb      	cmp	r3, r7
 8001318:	460e      	mov	r6, r1
 800131a:	d9f4      	bls.n	8001306 <_printf_i+0x11a>
 800131c:	2b08      	cmp	r3, #8
 800131e:	d10b      	bne.n	8001338 <_printf_i+0x14c>
 8001320:	6823      	ldr	r3, [r4, #0]
 8001322:	07de      	lsls	r6, r3, #31
 8001324:	d508      	bpl.n	8001338 <_printf_i+0x14c>
 8001326:	6923      	ldr	r3, [r4, #16]
 8001328:	6861      	ldr	r1, [r4, #4]
 800132a:	4299      	cmp	r1, r3
 800132c:	bfde      	ittt	le
 800132e:	2330      	movle	r3, #48	; 0x30
 8001330:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001334:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8001338:	1b52      	subs	r2, r2, r5
 800133a:	6122      	str	r2, [r4, #16]
 800133c:	f8cd a000 	str.w	sl, [sp]
 8001340:	464b      	mov	r3, r9
 8001342:	aa03      	add	r2, sp, #12
 8001344:	4621      	mov	r1, r4
 8001346:	4640      	mov	r0, r8
 8001348:	f7ff fee2 	bl	8001110 <_printf_common>
 800134c:	3001      	adds	r0, #1
 800134e:	d14c      	bne.n	80013ea <_printf_i+0x1fe>
 8001350:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001354:	b004      	add	sp, #16
 8001356:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800135a:	4835      	ldr	r0, [pc, #212]	; (8001430 <_printf_i+0x244>)
 800135c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8001360:	6829      	ldr	r1, [r5, #0]
 8001362:	6823      	ldr	r3, [r4, #0]
 8001364:	f851 6b04 	ldr.w	r6, [r1], #4
 8001368:	6029      	str	r1, [r5, #0]
 800136a:	061d      	lsls	r5, r3, #24
 800136c:	d514      	bpl.n	8001398 <_printf_i+0x1ac>
 800136e:	07df      	lsls	r7, r3, #31
 8001370:	bf44      	itt	mi
 8001372:	f043 0320 	orrmi.w	r3, r3, #32
 8001376:	6023      	strmi	r3, [r4, #0]
 8001378:	b91e      	cbnz	r6, 8001382 <_printf_i+0x196>
 800137a:	6823      	ldr	r3, [r4, #0]
 800137c:	f023 0320 	bic.w	r3, r3, #32
 8001380:	6023      	str	r3, [r4, #0]
 8001382:	2310      	movs	r3, #16
 8001384:	e7b0      	b.n	80012e8 <_printf_i+0xfc>
 8001386:	6823      	ldr	r3, [r4, #0]
 8001388:	f043 0320 	orr.w	r3, r3, #32
 800138c:	6023      	str	r3, [r4, #0]
 800138e:	2378      	movs	r3, #120	; 0x78
 8001390:	4828      	ldr	r0, [pc, #160]	; (8001434 <_printf_i+0x248>)
 8001392:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001396:	e7e3      	b.n	8001360 <_printf_i+0x174>
 8001398:	0659      	lsls	r1, r3, #25
 800139a:	bf48      	it	mi
 800139c:	b2b6      	uxthmi	r6, r6
 800139e:	e7e6      	b.n	800136e <_printf_i+0x182>
 80013a0:	4615      	mov	r5, r2
 80013a2:	e7bb      	b.n	800131c <_printf_i+0x130>
 80013a4:	682b      	ldr	r3, [r5, #0]
 80013a6:	6826      	ldr	r6, [r4, #0]
 80013a8:	6961      	ldr	r1, [r4, #20]
 80013aa:	1d18      	adds	r0, r3, #4
 80013ac:	6028      	str	r0, [r5, #0]
 80013ae:	0635      	lsls	r5, r6, #24
 80013b0:	681b      	ldr	r3, [r3, #0]
 80013b2:	d501      	bpl.n	80013b8 <_printf_i+0x1cc>
 80013b4:	6019      	str	r1, [r3, #0]
 80013b6:	e002      	b.n	80013be <_printf_i+0x1d2>
 80013b8:	0670      	lsls	r0, r6, #25
 80013ba:	d5fb      	bpl.n	80013b4 <_printf_i+0x1c8>
 80013bc:	8019      	strh	r1, [r3, #0]
 80013be:	2300      	movs	r3, #0
 80013c0:	6123      	str	r3, [r4, #16]
 80013c2:	4615      	mov	r5, r2
 80013c4:	e7ba      	b.n	800133c <_printf_i+0x150>
 80013c6:	682b      	ldr	r3, [r5, #0]
 80013c8:	1d1a      	adds	r2, r3, #4
 80013ca:	602a      	str	r2, [r5, #0]
 80013cc:	681d      	ldr	r5, [r3, #0]
 80013ce:	6862      	ldr	r2, [r4, #4]
 80013d0:	2100      	movs	r1, #0
 80013d2:	4628      	mov	r0, r5
 80013d4:	f7fe ff1c 	bl	8000210 <memchr>
 80013d8:	b108      	cbz	r0, 80013de <_printf_i+0x1f2>
 80013da:	1b40      	subs	r0, r0, r5
 80013dc:	6060      	str	r0, [r4, #4]
 80013de:	6863      	ldr	r3, [r4, #4]
 80013e0:	6123      	str	r3, [r4, #16]
 80013e2:	2300      	movs	r3, #0
 80013e4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80013e8:	e7a8      	b.n	800133c <_printf_i+0x150>
 80013ea:	6923      	ldr	r3, [r4, #16]
 80013ec:	462a      	mov	r2, r5
 80013ee:	4649      	mov	r1, r9
 80013f0:	4640      	mov	r0, r8
 80013f2:	47d0      	blx	sl
 80013f4:	3001      	adds	r0, #1
 80013f6:	d0ab      	beq.n	8001350 <_printf_i+0x164>
 80013f8:	6823      	ldr	r3, [r4, #0]
 80013fa:	079b      	lsls	r3, r3, #30
 80013fc:	d413      	bmi.n	8001426 <_printf_i+0x23a>
 80013fe:	68e0      	ldr	r0, [r4, #12]
 8001400:	9b03      	ldr	r3, [sp, #12]
 8001402:	4298      	cmp	r0, r3
 8001404:	bfb8      	it	lt
 8001406:	4618      	movlt	r0, r3
 8001408:	e7a4      	b.n	8001354 <_printf_i+0x168>
 800140a:	2301      	movs	r3, #1
 800140c:	4632      	mov	r2, r6
 800140e:	4649      	mov	r1, r9
 8001410:	4640      	mov	r0, r8
 8001412:	47d0      	blx	sl
 8001414:	3001      	adds	r0, #1
 8001416:	d09b      	beq.n	8001350 <_printf_i+0x164>
 8001418:	3501      	adds	r5, #1
 800141a:	68e3      	ldr	r3, [r4, #12]
 800141c:	9903      	ldr	r1, [sp, #12]
 800141e:	1a5b      	subs	r3, r3, r1
 8001420:	42ab      	cmp	r3, r5
 8001422:	dcf2      	bgt.n	800140a <_printf_i+0x21e>
 8001424:	e7eb      	b.n	80013fe <_printf_i+0x212>
 8001426:	2500      	movs	r5, #0
 8001428:	f104 0619 	add.w	r6, r4, #25
 800142c:	e7f5      	b.n	800141a <_printf_i+0x22e>
 800142e:	bf00      	nop
 8001430:	080016c1 	.word	0x080016c1
 8001434:	080016d2 	.word	0x080016d2

08001438 <_sbrk_r>:
 8001438:	b538      	push	{r3, r4, r5, lr}
 800143a:	4d06      	ldr	r5, [pc, #24]	; (8001454 <_sbrk_r+0x1c>)
 800143c:	2300      	movs	r3, #0
 800143e:	4604      	mov	r4, r0
 8001440:	4608      	mov	r0, r1
 8001442:	602b      	str	r3, [r5, #0]
 8001444:	f7ff f82a 	bl	800049c <_sbrk>
 8001448:	1c43      	adds	r3, r0, #1
 800144a:	d102      	bne.n	8001452 <_sbrk_r+0x1a>
 800144c:	682b      	ldr	r3, [r5, #0]
 800144e:	b103      	cbz	r3, 8001452 <_sbrk_r+0x1a>
 8001450:	6023      	str	r3, [r4, #0]
 8001452:	bd38      	pop	{r3, r4, r5, pc}
 8001454:	20000090 	.word	0x20000090

08001458 <__sread>:
 8001458:	b510      	push	{r4, lr}
 800145a:	460c      	mov	r4, r1
 800145c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001460:	f000 f8a0 	bl	80015a4 <_read_r>
 8001464:	2800      	cmp	r0, #0
 8001466:	bfab      	itete	ge
 8001468:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800146a:	89a3      	ldrhlt	r3, [r4, #12]
 800146c:	181b      	addge	r3, r3, r0
 800146e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001472:	bfac      	ite	ge
 8001474:	6563      	strge	r3, [r4, #84]	; 0x54
 8001476:	81a3      	strhlt	r3, [r4, #12]
 8001478:	bd10      	pop	{r4, pc}

0800147a <__swrite>:
 800147a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800147e:	461f      	mov	r7, r3
 8001480:	898b      	ldrh	r3, [r1, #12]
 8001482:	05db      	lsls	r3, r3, #23
 8001484:	4605      	mov	r5, r0
 8001486:	460c      	mov	r4, r1
 8001488:	4616      	mov	r6, r2
 800148a:	d505      	bpl.n	8001498 <__swrite+0x1e>
 800148c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001490:	2302      	movs	r3, #2
 8001492:	2200      	movs	r2, #0
 8001494:	f000 f868 	bl	8001568 <_lseek_r>
 8001498:	89a3      	ldrh	r3, [r4, #12]
 800149a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800149e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80014a2:	81a3      	strh	r3, [r4, #12]
 80014a4:	4632      	mov	r2, r6
 80014a6:	463b      	mov	r3, r7
 80014a8:	4628      	mov	r0, r5
 80014aa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80014ae:	f000 b817 	b.w	80014e0 <_write_r>

080014b2 <__sseek>:
 80014b2:	b510      	push	{r4, lr}
 80014b4:	460c      	mov	r4, r1
 80014b6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014ba:	f000 f855 	bl	8001568 <_lseek_r>
 80014be:	1c43      	adds	r3, r0, #1
 80014c0:	89a3      	ldrh	r3, [r4, #12]
 80014c2:	bf15      	itete	ne
 80014c4:	6560      	strne	r0, [r4, #84]	; 0x54
 80014c6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80014ca:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80014ce:	81a3      	strheq	r3, [r4, #12]
 80014d0:	bf18      	it	ne
 80014d2:	81a3      	strhne	r3, [r4, #12]
 80014d4:	bd10      	pop	{r4, pc}

080014d6 <__sclose>:
 80014d6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014da:	f000 b813 	b.w	8001504 <_close_r>
	...

080014e0 <_write_r>:
 80014e0:	b538      	push	{r3, r4, r5, lr}
 80014e2:	4d07      	ldr	r5, [pc, #28]	; (8001500 <_write_r+0x20>)
 80014e4:	4604      	mov	r4, r0
 80014e6:	4608      	mov	r0, r1
 80014e8:	4611      	mov	r1, r2
 80014ea:	2200      	movs	r2, #0
 80014ec:	602a      	str	r2, [r5, #0]
 80014ee:	461a      	mov	r2, r3
 80014f0:	f7fe ff83 	bl	80003fa <_write>
 80014f4:	1c43      	adds	r3, r0, #1
 80014f6:	d102      	bne.n	80014fe <_write_r+0x1e>
 80014f8:	682b      	ldr	r3, [r5, #0]
 80014fa:	b103      	cbz	r3, 80014fe <_write_r+0x1e>
 80014fc:	6023      	str	r3, [r4, #0]
 80014fe:	bd38      	pop	{r3, r4, r5, pc}
 8001500:	20000090 	.word	0x20000090

08001504 <_close_r>:
 8001504:	b538      	push	{r3, r4, r5, lr}
 8001506:	4d06      	ldr	r5, [pc, #24]	; (8001520 <_close_r+0x1c>)
 8001508:	2300      	movs	r3, #0
 800150a:	4604      	mov	r4, r0
 800150c:	4608      	mov	r0, r1
 800150e:	602b      	str	r3, [r5, #0]
 8001510:	f7fe ff8f 	bl	8000432 <_close>
 8001514:	1c43      	adds	r3, r0, #1
 8001516:	d102      	bne.n	800151e <_close_r+0x1a>
 8001518:	682b      	ldr	r3, [r5, #0]
 800151a:	b103      	cbz	r3, 800151e <_close_r+0x1a>
 800151c:	6023      	str	r3, [r4, #0]
 800151e:	bd38      	pop	{r3, r4, r5, pc}
 8001520:	20000090 	.word	0x20000090

08001524 <_fstat_r>:
 8001524:	b538      	push	{r3, r4, r5, lr}
 8001526:	4d07      	ldr	r5, [pc, #28]	; (8001544 <_fstat_r+0x20>)
 8001528:	2300      	movs	r3, #0
 800152a:	4604      	mov	r4, r0
 800152c:	4608      	mov	r0, r1
 800152e:	4611      	mov	r1, r2
 8001530:	602b      	str	r3, [r5, #0]
 8001532:	f7fe ff8a 	bl	800044a <_fstat>
 8001536:	1c43      	adds	r3, r0, #1
 8001538:	d102      	bne.n	8001540 <_fstat_r+0x1c>
 800153a:	682b      	ldr	r3, [r5, #0]
 800153c:	b103      	cbz	r3, 8001540 <_fstat_r+0x1c>
 800153e:	6023      	str	r3, [r4, #0]
 8001540:	bd38      	pop	{r3, r4, r5, pc}
 8001542:	bf00      	nop
 8001544:	20000090 	.word	0x20000090

08001548 <_isatty_r>:
 8001548:	b538      	push	{r3, r4, r5, lr}
 800154a:	4d06      	ldr	r5, [pc, #24]	; (8001564 <_isatty_r+0x1c>)
 800154c:	2300      	movs	r3, #0
 800154e:	4604      	mov	r4, r0
 8001550:	4608      	mov	r0, r1
 8001552:	602b      	str	r3, [r5, #0]
 8001554:	f7fe ff89 	bl	800046a <_isatty>
 8001558:	1c43      	adds	r3, r0, #1
 800155a:	d102      	bne.n	8001562 <_isatty_r+0x1a>
 800155c:	682b      	ldr	r3, [r5, #0]
 800155e:	b103      	cbz	r3, 8001562 <_isatty_r+0x1a>
 8001560:	6023      	str	r3, [r4, #0]
 8001562:	bd38      	pop	{r3, r4, r5, pc}
 8001564:	20000090 	.word	0x20000090

08001568 <_lseek_r>:
 8001568:	b538      	push	{r3, r4, r5, lr}
 800156a:	4d07      	ldr	r5, [pc, #28]	; (8001588 <_lseek_r+0x20>)
 800156c:	4604      	mov	r4, r0
 800156e:	4608      	mov	r0, r1
 8001570:	4611      	mov	r1, r2
 8001572:	2200      	movs	r2, #0
 8001574:	602a      	str	r2, [r5, #0]
 8001576:	461a      	mov	r2, r3
 8001578:	f7fe ff82 	bl	8000480 <_lseek>
 800157c:	1c43      	adds	r3, r0, #1
 800157e:	d102      	bne.n	8001586 <_lseek_r+0x1e>
 8001580:	682b      	ldr	r3, [r5, #0]
 8001582:	b103      	cbz	r3, 8001586 <_lseek_r+0x1e>
 8001584:	6023      	str	r3, [r4, #0]
 8001586:	bd38      	pop	{r3, r4, r5, pc}
 8001588:	20000090 	.word	0x20000090

0800158c <__malloc_lock>:
 800158c:	4801      	ldr	r0, [pc, #4]	; (8001594 <__malloc_lock+0x8>)
 800158e:	f7ff bb1d 	b.w	8000bcc <__retarget_lock_acquire_recursive>
 8001592:	bf00      	nop
 8001594:	20000084 	.word	0x20000084

08001598 <__malloc_unlock>:
 8001598:	4801      	ldr	r0, [pc, #4]	; (80015a0 <__malloc_unlock+0x8>)
 800159a:	f7ff bb18 	b.w	8000bce <__retarget_lock_release_recursive>
 800159e:	bf00      	nop
 80015a0:	20000084 	.word	0x20000084

080015a4 <_read_r>:
 80015a4:	b538      	push	{r3, r4, r5, lr}
 80015a6:	4d07      	ldr	r5, [pc, #28]	; (80015c4 <_read_r+0x20>)
 80015a8:	4604      	mov	r4, r0
 80015aa:	4608      	mov	r0, r1
 80015ac:	4611      	mov	r1, r2
 80015ae:	2200      	movs	r2, #0
 80015b0:	602a      	str	r2, [r5, #0]
 80015b2:	461a      	mov	r2, r3
 80015b4:	f7fe ff04 	bl	80003c0 <_read>
 80015b8:	1c43      	adds	r3, r0, #1
 80015ba:	d102      	bne.n	80015c2 <_read_r+0x1e>
 80015bc:	682b      	ldr	r3, [r5, #0]
 80015be:	b103      	cbz	r3, 80015c2 <_read_r+0x1e>
 80015c0:	6023      	str	r3, [r4, #0]
 80015c2:	bd38      	pop	{r3, r4, r5, pc}
 80015c4:	20000090 	.word	0x20000090

080015c8 <_init>:
 80015c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015ca:	bf00      	nop
 80015cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015ce:	bc08      	pop	{r3}
 80015d0:	469e      	mov	lr, r3
 80015d2:	4770      	bx	lr

080015d4 <_fini>:
 80015d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015d6:	bf00      	nop
 80015d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015da:	bc08      	pop	{r3}
 80015dc:	469e      	mov	lr, r3
 80015de:	4770      	bx	lr
